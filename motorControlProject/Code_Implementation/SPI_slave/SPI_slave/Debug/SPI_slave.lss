
SPI_slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000159a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000036  00800060  0000159a  0000162e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000022  00800096  00800096  00001664  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001664  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001303  00000000  00000000  000017f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000925  00000000  00000000  00002af7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008c7  00000000  00000000  0000341c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00003ce4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000511  00000000  00000000  00003fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b88  00000000  00000000  000044d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  0000505d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__vector_1>
       8:	0c 94 a2 01 	jmp	0x344	; 0x344 <__vector_2>
       c:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_3>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_9>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__mulsf3+0x22>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <pos_ctrl+0x9c>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <__vector_3+0x20>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Cmd+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ea e9       	ldi	r30, 0x9A	; 154
     162:	f5 e1       	ldi	r31, 0x15	; 21
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a6 39       	cpi	r26, 0x96	; 150
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	a6 e9       	ldi	r26, 0x96	; 150
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a8 3b       	cpi	r26, 0xB8	; 184
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 12 04 	call	0x824	; 0x824 <main>
     184:	0c 94 cb 0a 	jmp	0x1596	; 0x1596 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <LCD_Cmd>:
}
/*Clear LCD Function*/
void LCD_Clear(void){
	LCD_Cmd(0x01); /* clear display */
	_delay_ms(2);
	LCD_Cmd(0x80); /* Return display to its home position */
     18c:	95 b3       	in	r25, 0x15	; 21
     18e:	9f 70       	andi	r25, 0x0F	; 15
     190:	28 2f       	mov	r18, r24
     192:	20 7f       	andi	r18, 0xF0	; 240
     194:	92 2b       	or	r25, r18
     196:	95 bb       	out	0x15, r25	; 21
     198:	a8 98       	cbi	0x15, 0	; 21
     19a:	a9 9a       	sbi	0x15, 1	; 21
     19c:	32 e0       	ldi	r19, 0x02	; 2
     19e:	3a 95       	dec	r19
     1a0:	f1 f7       	brne	.-4      	; 0x19e <LCD_Cmd+0x12>
     1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <LCD_Cmd+0x18>
     1a4:	a9 98       	cbi	0x15, 1	; 21
     1a6:	ef e8       	ldi	r30, 0x8F	; 143
     1a8:	f1 e0       	ldi	r31, 0x01	; 1
     1aa:	31 97       	sbiw	r30, 0x01	; 1
     1ac:	f1 f7       	brne	.-4      	; 0x1aa <LCD_Cmd+0x1e>
     1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <LCD_Cmd+0x24>
     1b0:	00 00       	nop
     1b2:	25 b3       	in	r18, 0x15	; 21
     1b4:	2f 70       	andi	r18, 0x0F	; 15
     1b6:	f0 e1       	ldi	r31, 0x10	; 16
     1b8:	8f 9f       	mul	r24, r31
     1ba:	c0 01       	movw	r24, r0
     1bc:	11 24       	eor	r1, r1
     1be:	82 2b       	or	r24, r18
     1c0:	85 bb       	out	0x15, r24	; 21
     1c2:	a9 9a       	sbi	0x15, 1	; 21
     1c4:	32 e0       	ldi	r19, 0x02	; 2
     1c6:	3a 95       	dec	r19
     1c8:	f1 f7       	brne	.-4      	; 0x1c6 <LCD_Cmd+0x3a>
     1ca:	00 c0       	rjmp	.+0      	; 0x1cc <LCD_Cmd+0x40>
     1cc:	a9 98       	cbi	0x15, 1	; 21
     1ce:	8f e9       	ldi	r24, 0x9F	; 159
     1d0:	9f e0       	ldi	r25, 0x0F	; 15
     1d2:	01 97       	sbiw	r24, 0x01	; 1
     1d4:	f1 f7       	brne	.-4      	; 0x1d2 <LCD_Cmd+0x46>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <LCD_Cmd+0x4c>
     1d8:	00 00       	nop
     1da:	08 95       	ret

000001dc <LCD_Char>:
     1dc:	95 b3       	in	r25, 0x15	; 21
     1de:	9f 70       	andi	r25, 0x0F	; 15
     1e0:	28 2f       	mov	r18, r24
     1e2:	20 7f       	andi	r18, 0xF0	; 240
     1e4:	92 2b       	or	r25, r18
     1e6:	95 bb       	out	0x15, r25	; 21
     1e8:	a8 9a       	sbi	0x15, 0	; 21
     1ea:	a9 9a       	sbi	0x15, 1	; 21
     1ec:	32 e0       	ldi	r19, 0x02	; 2
     1ee:	3a 95       	dec	r19
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_Char+0x12>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_Char+0x18>
     1f4:	a9 98       	cbi	0x15, 1	; 21
     1f6:	ef e8       	ldi	r30, 0x8F	; 143
     1f8:	f1 e0       	ldi	r31, 0x01	; 1
     1fa:	31 97       	sbiw	r30, 0x01	; 1
     1fc:	f1 f7       	brne	.-4      	; 0x1fa <LCD_Char+0x1e>
     1fe:	00 c0       	rjmp	.+0      	; 0x200 <LCD_Char+0x24>
     200:	00 00       	nop
     202:	25 b3       	in	r18, 0x15	; 21
     204:	2f 70       	andi	r18, 0x0F	; 15
     206:	f0 e1       	ldi	r31, 0x10	; 16
     208:	8f 9f       	mul	r24, r31
     20a:	c0 01       	movw	r24, r0
     20c:	11 24       	eor	r1, r1
     20e:	82 2b       	or	r24, r18
     210:	85 bb       	out	0x15, r24	; 21
     212:	a9 9a       	sbi	0x15, 1	; 21
     214:	32 e0       	ldi	r19, 0x02	; 2
     216:	3a 95       	dec	r19
     218:	f1 f7       	brne	.-4      	; 0x216 <LCD_Char+0x3a>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <LCD_Char+0x40>
     21c:	a9 98       	cbi	0x15, 1	; 21
     21e:	8f e9       	ldi	r24, 0x9F	; 159
     220:	9f e0       	ldi	r25, 0x0F	; 15
     222:	01 97       	sbiw	r24, 0x01	; 1
     224:	f1 f7       	brne	.-4      	; 0x222 <LCD_Char+0x46>
     226:	00 c0       	rjmp	.+0      	; 0x228 <LCD_Char+0x4c>
     228:	00 00       	nop
     22a:	08 95       	ret

0000022c <LCD_Init>:
     22c:	8f ef       	ldi	r24, 0xFF	; 255
     22e:	84 bb       	out	0x14, r24	; 20
     230:	8f e3       	ldi	r24, 0x3F	; 63
     232:	9c e9       	ldi	r25, 0x9C	; 156
     234:	01 97       	sbiw	r24, 0x01	; 1
     236:	f1 f7       	brne	.-4      	; 0x234 <LCD_Init+0x8>
     238:	00 c0       	rjmp	.+0      	; 0x23a <LCD_Init+0xe>
     23a:	00 00       	nop
     23c:	82 e0       	ldi	r24, 0x02	; 2
     23e:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     242:	83 e3       	ldi	r24, 0x33	; 51
     244:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     248:	82 e3       	ldi	r24, 0x32	; 50
     24a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     24e:	88 e2       	ldi	r24, 0x28	; 40
     250:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     254:	8c e0       	ldi	r24, 0x0C	; 12
     256:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     25a:	86 e0       	ldi	r24, 0x06	; 6
     25c:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     266:	08 95       	ret

00000268 <LCD_String>:
}

/*Send string to LCD function */
void LCD_String (char *str){
     268:	cf 93       	push	r28
     26a:	df 93       	push	r29
     26c:	ec 01       	movw	r28, r24
	int i;
	/* Send each char of string till the NULL */
	for(i=0;str[i]!=0;i++){
     26e:	88 81       	ld	r24, Y
     270:	88 23       	and	r24, r24
     272:	31 f0       	breq	.+12     	; 0x280 <LCD_String+0x18>
     274:	21 96       	adiw	r28, 0x01	; 1
		LCD_Char(str[i]);
     276:	0e 94 ee 00 	call	0x1dc	; 0x1dc <LCD_Char>

/*Send string to LCD function */
void LCD_String (char *str){
	int i;
	/* Send each char of string till the NULL */
	for(i=0;str[i]!=0;i++){
     27a:	89 91       	ld	r24, Y+
     27c:	81 11       	cpse	r24, r1
     27e:	fb cf       	rjmp	.-10     	; 0x276 <LCD_String+0xe>
		LCD_Char(str[i]);
	}
}
     280:	df 91       	pop	r29
     282:	cf 91       	pop	r28
     284:	08 95       	ret

00000286 <LCD_String_xy>:
/*Send string to LCD with xy position */
void LCD_String_xy (char row, char pos, char *str){
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	ea 01       	movw	r28, r20
	if (row == 0 && pos<16){
     28c:	81 11       	cpse	r24, r1
     28e:	08 c0       	rjmp	.+16     	; 0x2a0 <LCD_String_xy+0x1a>
     290:	60 31       	cpi	r22, 0x10	; 16
     292:	78 f4       	brcc	.+30     	; 0x2b2 <LCD_String_xy+0x2c>
		LCD_Cmd((pos & 0x0F)|0x80);/* Command of first row and required
     294:	86 2f       	mov	r24, r22
     296:	8f 70       	andi	r24, 0x0F	; 15
     298:	80 68       	ori	r24, 0x80	; 128
     29a:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
     29e:	09 c0       	rjmp	.+18     	; 0x2b2 <LCD_String_xy+0x2c>
		position<16 */
	}
	else if (row == 1 && pos<16){
     2a0:	81 30       	cpi	r24, 0x01	; 1
     2a2:	39 f4       	brne	.+14     	; 0x2b2 <LCD_String_xy+0x2c>
     2a4:	60 31       	cpi	r22, 0x10	; 16
     2a6:	28 f4       	brcc	.+10     	; 0x2b2 <LCD_String_xy+0x2c>
		LCD_Cmd((pos & 0x0F)|0xC0);/* Command of second row and required
     2a8:	86 2f       	mov	r24, r22
     2aa:	8f 70       	andi	r24, 0x0F	; 15
     2ac:	80 6c       	ori	r24, 0xC0	; 192
     2ae:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
		position<16 */
	}
	LCD_String(str); /* Call LCD string function */
     2b2:	ce 01       	movw	r24, r28
     2b4:	0e 94 34 01 	call	0x268	; 0x268 <LCD_String>
}
     2b8:	df 91       	pop	r29
     2ba:	cf 91       	pop	r28
     2bc:	08 95       	ret

000002be <interrupt_setup>:
	}
}

/*Interrupt setup function*/
void interrupt_setup(){
	DDRB = 0xFF; // Make PORTB as output Port
     2be:	8f ef       	ldi	r24, 0xFF	; 255
     2c0:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1<<PB2); // Make INT2 pin as Input
     2c2:	ba 98       	cbi	0x17, 2	; 23
	DDRB |= (1<<PB3); // Make OC0 pin as Output
     2c4:	bb 9a       	sbi	0x17, 3	; 23
	DDRD &= ~((1<<PD2)|(1<<PD3)); // Make INT0 pin as Input
     2c6:	81 b3       	in	r24, 0x11	; 17
     2c8:	83 7f       	andi	r24, 0xF3	; 243
     2ca:	81 bb       	out	0x11, r24	; 17
	GICR = (1<<INT2)|(1<<INT1)|(1<<INT0); // Enable INT0, INT2
     2cc:	80 ee       	ldi	r24, 0xE0	; 224
     2ce:	8b bf       	out	0x3b, r24	; 59
	MCUCR = (1<<ISC00)|(1<<ISC10); // Trigger INT0,INT1 on Logic change trigger
     2d0:	85 e0       	ldi	r24, 0x05	; 5
     2d2:	85 bf       	out	0x35, r24	; 53
	MCUCSR = (1<<ISC2);// Trigger INT2 on Rising Edge triggered
     2d4:	80 e4       	ldi	r24, 0x40	; 64
     2d6:	84 bf       	out	0x34, r24	; 52
	sei(); // Enable Global Interrupt */
     2d8:	78 94       	sei
     2da:	08 95       	ret

000002dc <__vector_1>:
}
	/* Interrupt ISR functions */
ISR(INT0_vect){
     2dc:	1f 92       	push	r1
     2de:	0f 92       	push	r0
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	0f 92       	push	r0
     2e4:	11 24       	eor	r1, r1
     2e6:	8f 93       	push	r24
     2e8:	9f 93       	push	r25
		cur_encode = PIND & ((1<<PD2)|(1<<PD3));
     2ea:	80 b3       	in	r24, 0x10	; 16
     2ec:	8c 70       	andi	r24, 0x0C	; 12
     2ee:	82 bb       	out	0x12, r24	; 18
		cur_encode = (cur_encode>>2);
     2f0:	82 b3       	in	r24, 0x12	; 18
     2f2:	86 95       	lsr	r24
     2f4:	86 95       	lsr	r24
     2f6:	82 bb       	out	0x12, r24	; 18
		// From the encoder value chart, when Channel A changes logic states we look
		// at the value of the interrupt pins. If they are either 0b 11 or 0b 00,
		// the motor is moving CW and we decrease the count
		if(cur_encode == 0x03 || cur_encode == 0x00){
     2f8:	82 b3       	in	r24, 0x12	; 18
     2fa:	83 30       	cpi	r24, 0x03	; 3
     2fc:	19 f0       	breq	.+6      	; 0x304 <__vector_1+0x28>
     2fe:	82 b3       	in	r24, 0x12	; 18
     300:	81 11       	cpse	r24, r1
     302:	0a c0       	rjmp	.+20     	; 0x318 <__vector_1+0x3c>
			count-=1;
     304:	80 91 b6 00 	lds	r24, 0x00B6	; 0x8000b6 <count>
     308:	90 91 b7 00 	lds	r25, 0x00B7	; 0x8000b7 <count+0x1>
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <count+0x1>
     312:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <count>
     316:	0f c0       	rjmp	.+30     	; 0x336 <__vector_1+0x5a>
		}
		// If they are either 0b 10 or 0b 01, the motor is moving CCW and we increase the count
		else if(cur_encode == 0x02 || cur_encode == 0x01){
     318:	82 b3       	in	r24, 0x12	; 18
     31a:	82 30       	cpi	r24, 0x02	; 2
     31c:	19 f0       	breq	.+6      	; 0x324 <__vector_1+0x48>
     31e:	82 b3       	in	r24, 0x12	; 18
     320:	81 30       	cpi	r24, 0x01	; 1
     322:	49 f4       	brne	.+18     	; 0x336 <__vector_1+0x5a>
			count+=1 ;
     324:	80 91 b6 00 	lds	r24, 0x00B6	; 0x8000b6 <count>
     328:	90 91 b7 00 	lds	r25, 0x00B7	; 0x8000b7 <count+0x1>
     32c:	01 96       	adiw	r24, 0x01	; 1
     32e:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <count+0x1>
     332:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <count>
		}
	}
     336:	9f 91       	pop	r25
     338:	8f 91       	pop	r24
     33a:	0f 90       	pop	r0
     33c:	0f be       	out	0x3f, r0	; 63
     33e:	0f 90       	pop	r0
     340:	1f 90       	pop	r1
     342:	18 95       	reti

00000344 <__vector_2>:
ISR(INT1_vect){
     344:	1f 92       	push	r1
     346:	0f 92       	push	r0
     348:	0f b6       	in	r0, 0x3f	; 63
     34a:	0f 92       	push	r0
     34c:	11 24       	eor	r1, r1
     34e:	8f 93       	push	r24
     350:	9f 93       	push	r25
		cur_encode = PIND & ((1<<PD2)|(1<<PD3)); // Obtain the reading from the PIND2 and PIND3
     352:	80 b3       	in	r24, 0x10	; 16
     354:	8c 70       	andi	r24, 0x0C	; 12
     356:	82 bb       	out	0x12, r24	; 18
		cur_encode = (cur_encode>>2);
     358:	82 b3       	in	r24, 0x12	; 18
     35a:	86 95       	lsr	r24
     35c:	86 95       	lsr	r24
     35e:	82 bb       	out	0x12, r24	; 18
		// From the encoder value chart, when Channel B changes logic states we look
		// at the value of the interrupt pins. If they are either 0b 01 or 0b 10,
		// the motor is moving CW and we decrease the count
		if(cur_encode == 0x01 || cur_encode == 0x02){
     360:	82 b3       	in	r24, 0x12	; 18
     362:	81 30       	cpi	r24, 0x01	; 1
     364:	19 f0       	breq	.+6      	; 0x36c <__vector_2+0x28>
     366:	82 b3       	in	r24, 0x12	; 18
     368:	82 30       	cpi	r24, 0x02	; 2
     36a:	51 f4       	brne	.+20     	; 0x380 <__vector_2+0x3c>
			count-=1;
     36c:	80 91 b6 00 	lds	r24, 0x00B6	; 0x8000b6 <count>
     370:	90 91 b7 00 	lds	r25, 0x00B7	; 0x8000b7 <count+0x1>
     374:	01 97       	sbiw	r24, 0x01	; 1
     376:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <count+0x1>
     37a:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <count>
     37e:	0f c0       	rjmp	.+30     	; 0x39e <__vector_2+0x5a>
		}
		// If they are either 0b 11 or 0b 00, the motor is moving CCW and we increase the count
		else if(cur_encode == 0x03 || cur_encode == 0x00){
     380:	82 b3       	in	r24, 0x12	; 18
     382:	83 30       	cpi	r24, 0x03	; 3
     384:	19 f0       	breq	.+6      	; 0x38c <__vector_2+0x48>
     386:	82 b3       	in	r24, 0x12	; 18
     388:	81 11       	cpse	r24, r1
     38a:	09 c0       	rjmp	.+18     	; 0x39e <__vector_2+0x5a>
			count+=1;
     38c:	80 91 b6 00 	lds	r24, 0x00B6	; 0x8000b6 <count>
     390:	90 91 b7 00 	lds	r25, 0x00B7	; 0x8000b7 <count+0x1>
     394:	01 96       	adiw	r24, 0x01	; 1
     396:	90 93 b7 00 	sts	0x00B7, r25	; 0x8000b7 <count+0x1>
     39a:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <count>
		}
	}
     39e:	9f 91       	pop	r25
     3a0:	8f 91       	pop	r24
     3a2:	0f 90       	pop	r0
     3a4:	0f be       	out	0x3f, r0	; 63
     3a6:	0f 90       	pop	r0
     3a8:	1f 90       	pop	r1
     3aa:	18 95       	reti

000003ac <__vector_3>:
ISR(INT2_vect){
     3ac:	1f 92       	push	r1
     3ae:	0f 92       	push	r0
     3b0:	0f b6       	in	r0, 0x3f	; 63
     3b2:	0f 92       	push	r0
     3b4:	11 24       	eor	r1, r1
     3b6:	2f 93       	push	r18
     3b8:	3f 93       	push	r19
     3ba:	4f 93       	push	r20
     3bc:	5f 93       	push	r21
     3be:	6f 93       	push	r22
     3c0:	7f 93       	push	r23
     3c2:	8f 93       	push	r24
     3c4:	9f 93       	push	r25
     3c6:	af 93       	push	r26
     3c8:	bf 93       	push	r27
     3ca:	ef 93       	push	r30
     3cc:	ff 93       	push	r31
	/*Emergency stop interrupt*/
	LCD_Cmd(0x01);
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
	LCD_String_xy(0,3,"EMERGENCY!");
     3d4:	40 e6       	ldi	r20, 0x60	; 96
     3d6:	50 e0       	ldi	r21, 0x00	; 0
     3d8:	63 e0       	ldi	r22, 0x03	; 3
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
	LCD_String_xy(1,5,"STOP!");
     3e0:	4b e6       	ldi	r20, 0x6B	; 107
     3e2:	50 e0       	ldi	r21, 0x00	; 0
     3e4:	65 e0       	ldi	r22, 0x05	; 5
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
	//Set motor speed to zero and initialize motor brake
	//Toggle stop status for all loops
	OCR0 = 0; 
     3ec:	1c be       	out	0x3c, r1	; 60
	PORTB = 0x03;
     3ee:	83 e0       	ldi	r24, 0x03	; 3
     3f0:	88 bb       	out	0x18, r24	; 24
	stop = ~stop;
     3f2:	80 91 97 00 	lds	r24, 0x0097	; 0x800097 <stop>
     3f6:	80 95       	com	r24
     3f8:	80 93 97 00 	sts	0x0097, r24	; 0x800097 <stop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3fc:	2f e7       	ldi	r18, 0x7F	; 127
     3fe:	88 e3       	ldi	r24, 0x38	; 56
     400:	91 e0       	ldi	r25, 0x01	; 1
     402:	21 50       	subi	r18, 0x01	; 1
     404:	80 40       	sbci	r24, 0x00	; 0
     406:	90 40       	sbci	r25, 0x00	; 0
     408:	e1 f7       	brne	.-8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     40a:	00 c0       	rjmp	.+0      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
     40c:	00 00       	nop
	_delay_ms(50); // Software de-bouncing control delay
}
     40e:	ff 91       	pop	r31
     410:	ef 91       	pop	r30
     412:	bf 91       	pop	r27
     414:	af 91       	pop	r26
     416:	9f 91       	pop	r25
     418:	8f 91       	pop	r24
     41a:	7f 91       	pop	r23
     41c:	6f 91       	pop	r22
     41e:	5f 91       	pop	r21
     420:	4f 91       	pop	r20
     422:	3f 91       	pop	r19
     424:	2f 91       	pop	r18
     426:	0f 90       	pop	r0
     428:	0f be       	out	0x3f, r0	; 63
     42a:	0f 90       	pop	r0
     42c:	1f 90       	pop	r1
     42e:	18 95       	reti

00000430 <pwm_setup>:

void pwm_setup(){
		/* GPIO setup */
		DDRB |= (1<<PB3); // Make OC0 pin as Output
     430:	bb 9a       	sbi	0x17, 3	; 23
		/* PWM setup */
		TCCR0 = (1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS02); // Set Fast PWM with Fosc/256 Timer0 clock
     432:	8c e6       	ldi	r24, 0x6C	; 108
     434:	83 bf       	out	0x33, r24	; 51
     436:	08 95       	ret

00000438 <timer_setup>:
	}
	
	/*Timer setup function*/
void timer_setup(){
		TIMSK |= (1<<TOIE1); // Activate the timer overflow interrupt
     438:	89 b7       	in	r24, 0x39	; 57
     43a:	84 60       	ori	r24, 0x04	; 4
     43c:	89 bf       	out	0x39, r24	; 57
		TCCR1B = (1<<CS11)|(1<<CS10); // Set the timer prescalar to 64
     43e:	83 e0       	ldi	r24, 0x03	; 3
     440:	8e bd       	out	0x2e, r24	; 46
		TCNT1 = 3036; // Load the countdown value for 500ms
     442:	8c ed       	ldi	r24, 0xDC	; 220
     444:	9b e0       	ldi	r25, 0x0B	; 11
     446:	9d bd       	out	0x2d, r25	; 45
     448:	8c bd       	out	0x2c, r24	; 44
     44a:	08 95       	ret

0000044c <__vector_9>:
	}
	
	/*Timer overflow ISR*/
ISR(TIMER1_OVF_vect){
     44c:	1f 92       	push	r1
     44e:	0f 92       	push	r0
     450:	0f b6       	in	r0, 0x3f	; 63
     452:	0f 92       	push	r0
     454:	11 24       	eor	r1, r1
     456:	2f 93       	push	r18
     458:	3f 93       	push	r19
     45a:	4f 93       	push	r20
     45c:	5f 93       	push	r21
     45e:	6f 93       	push	r22
     460:	7f 93       	push	r23
     462:	8f 93       	push	r24
     464:	9f 93       	push	r25
     466:	af 93       	push	r26
     468:	bf 93       	push	r27
     46a:	cf 93       	push	r28
     46c:	df 93       	push	r29
     46e:	ef 93       	push	r30
     470:	ff 93       	push	r31
		cur_count = count;
     472:	c0 91 b6 00 	lds	r28, 0x00B6	; 0x8000b6 <count>
     476:	d0 91 b7 00 	lds	r29, 0x00B7	; 0x8000b7 <count+0x1>
     47a:	d0 93 b5 00 	sts	0x00B5, r29	; 0x8000b5 <cur_count+0x1>
     47e:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <cur_count>
		RPM = (cur_count-prev_count)*120/(96); // Calculate the RPMs
     482:	80 91 9a 00 	lds	r24, 0x009A	; 0x80009a <prev_count>
     486:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <prev_count+0x1>
     48a:	9e 01       	movw	r18, r28
     48c:	28 1b       	sub	r18, r24
     48e:	39 0b       	sbc	r19, r25
     490:	48 e7       	ldi	r20, 0x78	; 120
     492:	42 9f       	mul	r20, r18
     494:	c0 01       	movw	r24, r0
     496:	43 9f       	mul	r20, r19
     498:	90 0d       	add	r25, r0
     49a:	11 24       	eor	r1, r1
     49c:	60 e6       	ldi	r22, 0x60	; 96
     49e:	70 e0       	ldi	r23, 0x00	; 0
     4a0:	0e 94 67 05 	call	0xace	; 0xace <__divmodhi4>
     4a4:	07 2e       	mov	r0, r23
     4a6:	00 0c       	add	r0, r0
     4a8:	88 0b       	sbc	r24, r24
     4aa:	99 0b       	sbc	r25, r25
     4ac:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__floatsisf>
     4b0:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <RPM>
     4b4:	70 93 9d 00 	sts	0x009D, r23	; 0x80009d <RPM+0x1>
     4b8:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <RPM+0x2>
     4bc:	90 93 9f 00 	sts	0x009F, r25	; 0x80009f <RPM+0x3>
		prev_count = cur_count;
     4c0:	d0 93 9b 00 	sts	0x009B, r29	; 0x80009b <prev_count+0x1>
     4c4:	c0 93 9a 00 	sts	0x009A, r28	; 0x80009a <prev_count>
		TCNT1 = 3036;
     4c8:	8c ed       	ldi	r24, 0xDC	; 220
     4ca:	9b e0       	ldi	r25, 0x0B	; 11
     4cc:	9d bd       	out	0x2d, r25	; 45
     4ce:	8c bd       	out	0x2c, r24	; 44
	}
     4d0:	ff 91       	pop	r31
     4d2:	ef 91       	pop	r30
     4d4:	df 91       	pop	r29
     4d6:	cf 91       	pop	r28
     4d8:	bf 91       	pop	r27
     4da:	af 91       	pop	r26
     4dc:	9f 91       	pop	r25
     4de:	8f 91       	pop	r24
     4e0:	7f 91       	pop	r23
     4e2:	6f 91       	pop	r22
     4e4:	5f 91       	pop	r21
     4e6:	4f 91       	pop	r20
     4e8:	3f 91       	pop	r19
     4ea:	2f 91       	pop	r18
     4ec:	0f 90       	pop	r0
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	0f 90       	pop	r0
     4f2:	1f 90       	pop	r1
     4f4:	18 95       	reti

000004f6 <speed_ctrl>:

/*Motor speed setup function*/
void speed_ctrl(char motor_speed){
     4f6:	0f 93       	push	r16
     4f8:	1f 93       	push	r17
     4fa:	cf 93       	push	r28
     4fc:	df 93       	push	r29
     4fe:	00 d0       	rcall	.+0      	; 0x500 <speed_ctrl+0xa>
     500:	00 d0       	rcall	.+0      	; 0x502 <speed_ctrl+0xc>
     502:	cd b7       	in	r28, 0x3d	; 61
     504:	de b7       	in	r29, 0x3e	; 62
     506:	18 2f       	mov	r17, r24
	char buffer1[4];
	int std_speed;
	//standard speed setup of maximum 70RPM = 255
	std_speed = motor_speed*3.65; //Convert input value to a fraction of 255	
     508:	68 2f       	mov	r22, r24
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__floatsisf>
     514:	2a e9       	ldi	r18, 0x9A	; 154
     516:	39 e9       	ldi	r19, 0x99	; 153
     518:	49 e6       	ldi	r20, 0x69	; 105
     51a:	50 e4       	ldi	r21, 0x40	; 64
     51c:	0e 94 c6 04 	call	0x98c	; 0x98c <__mulsf3>
     520:	0e 94 2a 04 	call	0x854	; 0x854 <__fixsfsi>
	PORTB = 0x01;
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	88 bb       	out	0x18, r24	; 24
	//If condition to ensure the motor RPM and OCR0 is above 0 and below maximum
	if (std_speed > 255)
     528:	6f 3f       	cpi	r22, 0xFF	; 255
     52a:	71 05       	cpc	r23, r1
     52c:	09 f0       	breq	.+2      	; 0x530 <speed_ctrl+0x3a>
     52e:	24 f4       	brge	.+8      	; 0x538 <speed_ctrl+0x42>
	{
		std_speed = 255;
		motor_speed = 70;
	} else if (std_speed<10)
     530:	6a 30       	cpi	r22, 0x0A	; 10
     532:	71 05       	cpc	r23, r1
     534:	2c f0       	brlt	.+10     	; 0x540 <speed_ctrl+0x4a>
     536:	07 c0       	rjmp	.+14     	; 0x546 <speed_ctrl+0x50>
	std_speed = motor_speed*3.65; //Convert input value to a fraction of 255	
	PORTB = 0x01;
	//If condition to ensure the motor RPM and OCR0 is above 0 and below maximum
	if (std_speed > 255)
	{
		std_speed = 255;
     538:	6f ef       	ldi	r22, 0xFF	; 255
     53a:	70 e0       	ldi	r23, 0x00	; 0
		motor_speed = 70;
     53c:	16 e4       	ldi	r17, 0x46	; 70
     53e:	03 c0       	rjmp	.+6      	; 0x546 <speed_ctrl+0x50>
	} else if (std_speed<10)
	{
		std_speed = 10;
     540:	6a e0       	ldi	r22, 0x0A	; 10
     542:	70 e0       	ldi	r23, 0x00	; 0
		motor_speed = 10;
     544:	1a e0       	ldi	r17, 0x0A	; 10
		}else{
		std_speed = std_speed;
		motor_speed = motor_speed;
	}
	OCR0 = std_speed; //map received values to OCR0
     546:	6c bf       	out	0x3c, r22	; 60
	
	//display the RPM value
	sprintf(buffer,"%d",motor_speed);
     548:	1f 92       	push	r1
     54a:	1f 93       	push	r17
     54c:	81 e7       	ldi	r24, 0x71	; 113
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	9f 93       	push	r25
     552:	8f 93       	push	r24
     554:	8a ea       	ldi	r24, 0xAA	; 170
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	9f 93       	push	r25
     55a:	8f 93       	push	r24
     55c:	0e 94 af 05 	call	0xb5e	; 0xb5e <sprintf>
	LCD_String_xy(0,10,buffer);
     560:	4a ea       	ldi	r20, 0xAA	; 170
     562:	50 e0       	ldi	r21, 0x00	; 0
     564:	6a e0       	ldi	r22, 0x0A	; 10
     566:	80 e0       	ldi	r24, 0x00	; 0
     568:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
	//Track the RPM and display
	start = ~start;
     56c:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <start>
     570:	80 95       	com	r24
     572:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <start>
	//Loop to monitor speed status or motor
	while (start)
     576:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <start>
     57a:	0f 90       	pop	r0
     57c:	0f 90       	pop	r0
     57e:	0f 90       	pop	r0
     580:	0f 90       	pop	r0
     582:	0f 90       	pop	r0
     584:	0f 90       	pop	r0
     586:	88 23       	and	r24, r24
     588:	89 f1       	breq	.+98     	; 0x5ec <speed_ctrl+0xf6>
	{
		if (stop != 0) break; //Toggle status change causes loop to exit
     58a:	80 91 97 00 	lds	r24, 0x0097	; 0x800097 <stop>
     58e:	81 11       	cpse	r24, r1
     590:	2d c0       	rjmp	.+90     	; 0x5ec <speed_ctrl+0xf6>
     592:	04 c0       	rjmp	.+8      	; 0x59c <speed_ctrl+0xa6>
     594:	80 91 97 00 	lds	r24, 0x0097	; 0x800097 <stop>
     598:	81 11       	cpse	r24, r1
     59a:	28 c0       	rjmp	.+80     	; 0x5ec <speed_ctrl+0xf6>
		LCD_Cmd(0xC6);
     59c:	86 ec       	ldi	r24, 0xC6	; 198
     59e:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
		dtostrf(RPM,2,2,buffer1); //convert double to string
     5a2:	60 91 9c 00 	lds	r22, 0x009C	; 0x80009c <RPM>
     5a6:	70 91 9d 00 	lds	r23, 0x009D	; 0x80009d <RPM+0x1>
     5aa:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <RPM+0x2>
     5ae:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <RPM+0x3>
     5b2:	8e 01       	movw	r16, r28
     5b4:	0f 5f       	subi	r16, 0xFF	; 255
     5b6:	1f 4f       	sbci	r17, 0xFF	; 255
     5b8:	22 e0       	ldi	r18, 0x02	; 2
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	42 e0       	ldi	r20, 0x02	; 2
     5be:	50 e0       	ldi	r21, 0x00	; 0
     5c0:	0e 94 8f 05 	call	0xb1e	; 0xb1e <dtostrf>
		LCD_String(buffer1);
     5c4:	c8 01       	movw	r24, r16
     5c6:	0e 94 34 01 	call	0x268	; 0x268 <LCD_String>
		LCD_String(" ");
     5ca:	84 e7       	ldi	r24, 0x74	; 116
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	0e 94 34 01 	call	0x268	; 0x268 <LCD_String>
     5d2:	2f ef       	ldi	r18, 0xFF	; 255
     5d4:	84 e3       	ldi	r24, 0x34	; 52
     5d6:	9c e0       	ldi	r25, 0x0C	; 12
     5d8:	21 50       	subi	r18, 0x01	; 1
     5da:	80 40       	sbci	r24, 0x00	; 0
     5dc:	90 40       	sbci	r25, 0x00	; 0
     5de:	e1 f7       	brne	.-8      	; 0x5d8 <speed_ctrl+0xe2>
     5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <speed_ctrl+0xec>
     5e2:	00 00       	nop
	sprintf(buffer,"%d",motor_speed);
	LCD_String_xy(0,10,buffer);
	//Track the RPM and display
	start = ~start;
	//Loop to monitor speed status or motor
	while (start)
     5e4:	80 91 98 00 	lds	r24, 0x0098	; 0x800098 <start>
     5e8:	81 11       	cpse	r24, r1
     5ea:	d4 cf       	rjmp	.-88     	; 0x594 <speed_ctrl+0x9e>
		dtostrf(RPM,2,2,buffer1); //convert double to string
		LCD_String(buffer1);
		LCD_String(" ");
		_delay_ms(500);
	}
}
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0f 90       	pop	r0
     5f4:	df 91       	pop	r29
     5f6:	cf 91       	pop	r28
     5f8:	1f 91       	pop	r17
     5fa:	0f 91       	pop	r16
     5fc:	08 95       	ret

000005fe <pos_ctrl>:

/*Setup function for number of revolutions*/
void pos_ctrl(char rev){
     5fe:	cf 92       	push	r12
     600:	df 92       	push	r13
     602:	ef 92       	push	r14
     604:	ff 92       	push	r15
     606:	0f 93       	push	r16
     608:	1f 93       	push	r17
     60a:	cf 93       	push	r28
     60c:	df 93       	push	r29
     60e:	cd b7       	in	r28, 0x3d	; 61
     610:	de b7       	in	r29, 0x3e	; 62
     612:	2a 97       	sbiw	r28, 0x0a	; 10
     614:	0f b6       	in	r0, 0x3f	; 63
     616:	f8 94       	cli
     618:	de bf       	out	0x3e, r29	; 62
     61a:	0f be       	out	0x3f, r0	; 63
     61c:	cd bf       	out	0x3d, r28	; 61
	char buffer1[10];
	int n_Rev;
	OCR0 = 218; // OCRO value for 60 revolutions per second i.e. 1 revolution per second
     61e:	9a ed       	ldi	r25, 0xDA	; 218
     620:	9c bf       	out	0x3c, r25	; 60
	//minimum value set is 5 and maximum is 40 revolutions
	if (rev<5)
     622:	85 30       	cpi	r24, 0x05	; 5
     624:	28 f0       	brcs	.+10     	; 0x630 <pos_ctrl+0x32>
	{
		n_Rev = 5;
	}else if (rev > 40)
     626:	89 32       	cpi	r24, 0x29	; 41
     628:	48 f4       	brcc	.+18     	; 0x63c <pos_ctrl+0x3e>
	{
		n_Rev = 40;
		}else{
		n_Rev = rev;
     62a:	c8 2e       	mov	r12, r24
     62c:	d1 2c       	mov	r13, r1
     62e:	0b c0       	rjmp	.+22     	; 0x646 <pos_ctrl+0x48>
	int n_Rev;
	OCR0 = 218; // OCRO value for 60 revolutions per second i.e. 1 revolution per second
	//minimum value set is 5 and maximum is 40 revolutions
	if (rev<5)
	{
		n_Rev = 5;
     630:	0f 2e       	mov	r0, r31
     632:	f5 e0       	ldi	r31, 0x05	; 5
     634:	cf 2e       	mov	r12, r31
     636:	d1 2c       	mov	r13, r1
     638:	f0 2d       	mov	r31, r0
     63a:	05 c0       	rjmp	.+10     	; 0x646 <pos_ctrl+0x48>
	}else if (rev > 40)
	{
		n_Rev = 40;
     63c:	0f 2e       	mov	r0, r31
     63e:	f8 e2       	ldi	r31, 0x28	; 40
     640:	cf 2e       	mov	r12, r31
     642:	d1 2c       	mov	r13, r1
     644:	f0 2d       	mov	r31, r0
		}else{
		n_Rev = rev;
	}
	//display the number of revolutions to be done
	sprintf(buffer,"%d",n_Rev); //integer to string conversion
     646:	df 92       	push	r13
     648:	cf 92       	push	r12
     64a:	81 e7       	ldi	r24, 0x71	; 113
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	9f 93       	push	r25
     650:	8f 93       	push	r24
     652:	8a ea       	ldi	r24, 0xAA	; 170
     654:	90 e0       	ldi	r25, 0x00	; 0
     656:	9f 93       	push	r25
     658:	8f 93       	push	r24
     65a:	0e 94 af 05 	call	0xb5e	; 0xb5e <sprintf>
	LCD_String_xy(0,7,buffer);
     65e:	4a ea       	ldi	r20, 0xAA	; 170
     660:	50 e0       	ldi	r21, 0x00	; 0
     662:	67 e0       	ldi	r22, 0x07	; 7
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
	//while loop condition for 1 second per loop
	PORTB = 0x01;
     66a:	81 e0       	ldi	r24, 0x01	; 1
     66c:	88 bb       	out	0x18, r24	; 24
	while(c != n_Rev){
     66e:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__data_end>
     672:	28 2f       	mov	r18, r24
     674:	30 e0       	ldi	r19, 0x00	; 0
     676:	0f 90       	pop	r0
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	0f 90       	pop	r0
     682:	c2 16       	cp	r12, r18
     684:	d3 06       	cpc	r13, r19
     686:	c9 f1       	breq	.+114    	; 0x6fa <pos_ctrl+0xfc>
		if (stop != 0) break; //Toggle status change causes loop to exit
     688:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <stop>
     68c:	91 11       	cpse	r25, r1
     68e:	35 c0       	rjmp	.+106    	; 0x6fa <pos_ctrl+0xfc>
		c++;
		sprintf(buffer1, "%d",c); //convert nth_loop to string
     690:	0f 2e       	mov	r0, r31
     692:	f1 e7       	ldi	r31, 0x71	; 113
     694:	ef 2e       	mov	r14, r31
     696:	f0 e0       	ldi	r31, 0x00	; 0
     698:	ff 2e       	mov	r15, r31
     69a:	f0 2d       	mov	r31, r0
     69c:	8e 01       	movw	r16, r28
     69e:	0f 5f       	subi	r16, 0xFF	; 255
     6a0:	1f 4f       	sbci	r17, 0xFF	; 255
     6a2:	04 c0       	rjmp	.+8      	; 0x6ac <pos_ctrl+0xae>
	sprintf(buffer,"%d",n_Rev); //integer to string conversion
	LCD_String_xy(0,7,buffer);
	//while loop condition for 1 second per loop
	PORTB = 0x01;
	while(c != n_Rev){
		if (stop != 0) break; //Toggle status change causes loop to exit
     6a4:	90 91 97 00 	lds	r25, 0x0097	; 0x800097 <stop>
     6a8:	91 11       	cpse	r25, r1
     6aa:	27 c0       	rjmp	.+78     	; 0x6fa <pos_ctrl+0xfc>
		c++;
     6ac:	8f 5f       	subi	r24, 0xFF	; 255
     6ae:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__data_end>
		sprintf(buffer1, "%d",c); //convert nth_loop to string
     6b2:	1f 92       	push	r1
     6b4:	8f 93       	push	r24
     6b6:	ff 92       	push	r15
     6b8:	ef 92       	push	r14
     6ba:	1f 93       	push	r17
     6bc:	0f 93       	push	r16
     6be:	0e 94 af 05 	call	0xb5e	; 0xb5e <sprintf>
		LCD_Cmd(0xc6); //LCD Position setup
     6c2:	86 ec       	ldi	r24, 0xC6	; 198
     6c4:	0e 94 c6 00 	call	0x18c	; 0x18c <LCD_Cmd>
		LCD_String(buffer1); //display the nth revolution
     6c8:	c8 01       	movw	r24, r16
     6ca:	0e 94 34 01 	call	0x268	; 0x268 <LCD_String>
     6ce:	2f ef       	ldi	r18, 0xFF	; 255
     6d0:	89 e6       	ldi	r24, 0x69	; 105
     6d2:	98 e1       	ldi	r25, 0x18	; 24
     6d4:	21 50       	subi	r18, 0x01	; 1
     6d6:	80 40       	sbci	r24, 0x00	; 0
     6d8:	90 40       	sbci	r25, 0x00	; 0
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <pos_ctrl+0xd6>
     6dc:	00 c0       	rjmp	.+0      	; 0x6de <pos_ctrl+0xe0>
     6de:	00 00       	nop
	//display the number of revolutions to be done
	sprintf(buffer,"%d",n_Rev); //integer to string conversion
	LCD_String_xy(0,7,buffer);
	//while loop condition for 1 second per loop
	PORTB = 0x01;
	while(c != n_Rev){
     6e0:	80 91 96 00 	lds	r24, 0x0096	; 0x800096 <__data_end>
     6e4:	28 2f       	mov	r18, r24
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	0f 90       	pop	r0
     6f4:	c2 16       	cp	r12, r18
     6f6:	d3 06       	cpc	r13, r19
     6f8:	a9 f6       	brne	.-86     	; 0x6a4 <pos_ctrl+0xa6>
		sprintf(buffer1, "%d",c); //convert nth_loop to string
		LCD_Cmd(0xc6); //LCD Position setup
		LCD_String(buffer1); //display the nth revolution
		_delay_ms(1000); // Delay loop for 1 second
	}
	PORTB = 0x03; // Initiate motor brakes after LOOP is done
     6fa:	83 e0       	ldi	r24, 0x03	; 3
     6fc:	88 bb       	out	0x18, r24	; 24
}
     6fe:	2a 96       	adiw	r28, 0x0a	; 10
     700:	0f b6       	in	r0, 0x3f	; 63
     702:	f8 94       	cli
     704:	de bf       	out	0x3e, r29	; 62
     706:	0f be       	out	0x3f, r0	; 63
     708:	cd bf       	out	0x3d, r28	; 61
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	1f 91       	pop	r17
     710:	0f 91       	pop	r16
     712:	ff 90       	pop	r15
     714:	ef 90       	pop	r14
     716:	df 90       	pop	r13
     718:	cf 90       	pop	r12
     71a:	08 95       	ret

0000071c <Mode_Set>:

/*Select loop Mode i.e. speed/position*/
void Mode_Set(char comp1, char comp2){ 
     71c:	1f 93       	push	r17
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
     722:	00 d0       	rcall	.+0      	; 0x724 <Mode_Set+0x8>
     724:	00 d0       	rcall	.+0      	; 0x726 <Mode_Set+0xa>
     726:	cd b7       	in	r28, 0x3d	; 61
     728:	de b7       	in	r29, 0x3e	; 62
     72a:	18 2f       	mov	r17, r24
     72c:	86 2f       	mov	r24, r22
	char mode_val[4];
	int mode_sel;
	mode_sel = comp2%comp1; //Modulus returns either 0 or 1 to determine mode
	switch(mode_sel) //returned value passed to switch case
     72e:	61 2f       	mov	r22, r17
     730:	0e 94 5b 05 	call	0xab6	; 0xab6 <__udivmodqi4>
     734:	99 23       	and	r25, r25
     736:	19 f0       	breq	.+6      	; 0x73e <Mode_Set+0x22>
     738:	91 30       	cpi	r25, 0x01	; 1
     73a:	79 f1       	breq	.+94     	; 0x79a <Mode_Set+0x7e>
     73c:	5b c0       	rjmp	.+182    	; 0x7f4 <Mode_Set+0xd8>
	{
		case 0: // Switch case for speed control selection
		//LCD setup function for speed control
			LCD_String_xy(0,0,"M-SPEED->");
     73e:	46 e7       	ldi	r20, 0x76	; 118
     740:	50 e0       	ldi	r21, 0x00	; 0
     742:	60 e0       	ldi	r22, 0x00	; 0
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
			sprintf(mode_val, "%d",comp1);
     74a:	1f 92       	push	r1
     74c:	1f 93       	push	r17
     74e:	81 e7       	ldi	r24, 0x71	; 113
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	9f 93       	push	r25
     754:	8f 93       	push	r24
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	9f 93       	push	r25
     75c:	8f 93       	push	r24
     75e:	0e 94 af 05 	call	0xb5e	; 0xb5e <sprintf>
			LCD_String_xy(0,13,"RPM");
     762:	40 e8       	ldi	r20, 0x80	; 128
     764:	50 e0       	ldi	r21, 0x00	; 0
     766:	6d e0       	ldi	r22, 0x0D	; 13
     768:	80 e0       	ldi	r24, 0x00	; 0
     76a:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
		//value passed to control setup function
			LCD_String_xy(1,0,"Cur:");
     76e:	44 e8       	ldi	r20, 0x84	; 132
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
			LCD_String_xy(1,12,"RPM");
     77a:	40 e8       	ldi	r20, 0x80	; 128
     77c:	50 e0       	ldi	r21, 0x00	; 0
     77e:	6c e0       	ldi	r22, 0x0C	; 12
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
			speed_ctrl(comp1);
     786:	81 2f       	mov	r24, r17
     788:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <speed_ctrl>
			break;
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	0f 90       	pop	r0
     792:	0f 90       	pop	r0
     794:	0f 90       	pop	r0
     796:	0f 90       	pop	r0
     798:	2d c0       	rjmp	.+90     	; 0x7f4 <Mode_Set+0xd8>
		case 1: //Switch case for position control setup
		//LCD setup function for position control
			LCD_String_xy(0,0,"M-POS->");
     79a:	49 e8       	ldi	r20, 0x89	; 137
     79c:	50 e0       	ldi	r21, 0x00	; 0
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
			sprintf(mode_val, "%d",comp1);
     7a6:	1f 92       	push	r1
     7a8:	1f 93       	push	r17
     7aa:	81 e7       	ldi	r24, 0x71	; 113
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	9f 93       	push	r25
     7b0:	8f 93       	push	r24
     7b2:	ce 01       	movw	r24, r28
     7b4:	01 96       	adiw	r24, 0x01	; 1
     7b6:	9f 93       	push	r25
     7b8:	8f 93       	push	r24
     7ba:	0e 94 af 05 	call	0xb5e	; 0xb5e <sprintf>
			LCD_String_xy(0,10,"REV");
     7be:	41 e9       	ldi	r20, 0x91	; 145
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	6a e0       	ldi	r22, 0x0A	; 10
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
		//value passed to control setup function
			LCD_String_xy(1,0,"Cur:");
     7ca:	44 e8       	ldi	r20, 0x84	; 132
     7cc:	50 e0       	ldi	r21, 0x00	; 0
     7ce:	60 e0       	ldi	r22, 0x00	; 0
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
			LCD_String_xy(1,10,"REV");
     7d6:	41 e9       	ldi	r20, 0x91	; 145
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	6a e0       	ldi	r22, 0x0A	; 10
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	0e 94 43 01 	call	0x286	; 0x286 <LCD_String_xy>
			pos_ctrl(comp1);
     7e2:	81 2f       	mov	r24, r17
     7e4:	0e 94 ff 02 	call	0x5fe	; 0x5fe <pos_ctrl>
			break;
     7e8:	0f 90       	pop	r0
     7ea:	0f 90       	pop	r0
     7ec:	0f 90       	pop	r0
     7ee:	0f 90       	pop	r0
     7f0:	0f 90       	pop	r0
     7f2:	0f 90       	pop	r0
	}
}
     7f4:	0f 90       	pop	r0
     7f6:	0f 90       	pop	r0
     7f8:	0f 90       	pop	r0
     7fa:	0f 90       	pop	r0
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	1f 91       	pop	r17
     802:	08 95       	ret

00000804 <received>:

/*Setup function for received data*/
void received(){
     804:	cf 93       	push	r28
	char message1, message2;
	int k = 0;
	//Loop to read the data sent in form of characters and assigns to new char declarations
	do 
	{
		character = SPI_Receive();
     806:	0e 94 26 04 	call	0x84c	; 0x84c <SPI_Receive>
     80a:	c8 2f       	mov	r28, r24
     80c:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <character>
     810:	0e 94 26 04 	call	0x84c	; 0x84c <SPI_Receive>
     814:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <character>
			message2 = character;
		}
		k++;
	} while (k <2); // Loop stop condition
	//Received characters passed to mode setup function
	Mode_Set(message1,message2);
     818:	68 2f       	mov	r22, r24
     81a:	8c 2f       	mov	r24, r28
     81c:	0e 94 8e 03 	call	0x71c	; 0x71c <Mode_Set>
}
     820:	cf 91       	pop	r28
     822:	08 95       	ret

00000824 <main>:

int main(void)
{
	LCD_Init();
     824:	0e 94 16 01 	call	0x22c	; 0x22c <LCD_Init>
	SPI_Init();
     828:	0e 94 1f 04 	call	0x83e	; 0x83e <SPI_Init>
	pwm_setup();
     82c:	0e 94 18 02 	call	0x430	; 0x430 <pwm_setup>
	interrupt_setup();
     830:	0e 94 5f 01 	call	0x2be	; 0x2be <interrupt_setup>
	timer_setup();
     834:	0e 94 1c 02 	call	0x438	; 0x438 <timer_setup>
	
	while (1)
	{	
		received();
     838:	0e 94 02 04 	call	0x804	; 0x804 <received>
     83c:	fd cf       	rjmp	.-6      	; 0x838 <main+0x14>

0000083e <SPI_Init>:
char SPI_Transmit(char data)					/* SPI transmit data function */
{
	SPDR = data;								/* Write data to SPI data register */
	while(!(SPSR & (1<<SPIF)));					/* Wait till transmission complete */
	return(SPDR);								/* return received data */
}
     83e:	87 b3       	in	r24, 0x17	; 23
     840:	8f 74       	andi	r24, 0x4F	; 79
     842:	87 bb       	out	0x17, r24	; 23
     844:	be 9a       	sbi	0x17, 6	; 23
     846:	80 e4       	ldi	r24, 0x40	; 64
     848:	8d b9       	out	0x0d, r24	; 13
     84a:	08 95       	ret

0000084c <SPI_Receive>:

char SPI_Receive()								/* SPI Receive data function */
{
	while(!(SPSR & (1<<SPIF)));					/* Wait till reception complete */
     84c:	77 9b       	sbis	0x0e, 7	; 14
     84e:	fe cf       	rjmp	.-4      	; 0x84c <SPI_Receive>
	return(SPDR);								/* return received data */
     850:	8f b1       	in	r24, 0x0f	; 15
}
     852:	08 95       	ret

00000854 <__fixsfsi>:
     854:	0e 94 31 04 	call	0x862	; 0x862 <__fixunssfsi>
     858:	68 94       	set
     85a:	b1 11       	cpse	r27, r1
     85c:	0c 94 c0 04 	jmp	0x980	; 0x980 <__fp_szero>
     860:	08 95       	ret

00000862 <__fixunssfsi>:
     862:	0e 94 a5 04 	call	0x94a	; 0x94a <__fp_splitA>
     866:	88 f0       	brcs	.+34     	; 0x88a <__fixunssfsi+0x28>
     868:	9f 57       	subi	r25, 0x7F	; 127
     86a:	98 f0       	brcs	.+38     	; 0x892 <__fixunssfsi+0x30>
     86c:	b9 2f       	mov	r27, r25
     86e:	99 27       	eor	r25, r25
     870:	b7 51       	subi	r27, 0x17	; 23
     872:	b0 f0       	brcs	.+44     	; 0x8a0 <__fixunssfsi+0x3e>
     874:	e1 f0       	breq	.+56     	; 0x8ae <__fixunssfsi+0x4c>
     876:	66 0f       	add	r22, r22
     878:	77 1f       	adc	r23, r23
     87a:	88 1f       	adc	r24, r24
     87c:	99 1f       	adc	r25, r25
     87e:	1a f0       	brmi	.+6      	; 0x886 <__fixunssfsi+0x24>
     880:	ba 95       	dec	r27
     882:	c9 f7       	brne	.-14     	; 0x876 <__fixunssfsi+0x14>
     884:	14 c0       	rjmp	.+40     	; 0x8ae <__fixunssfsi+0x4c>
     886:	b1 30       	cpi	r27, 0x01	; 1
     888:	91 f0       	breq	.+36     	; 0x8ae <__fixunssfsi+0x4c>
     88a:	0e 94 bf 04 	call	0x97e	; 0x97e <__fp_zero>
     88e:	b1 e0       	ldi	r27, 0x01	; 1
     890:	08 95       	ret
     892:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__fp_zero>
     896:	67 2f       	mov	r22, r23
     898:	78 2f       	mov	r23, r24
     89a:	88 27       	eor	r24, r24
     89c:	b8 5f       	subi	r27, 0xF8	; 248
     89e:	39 f0       	breq	.+14     	; 0x8ae <__fixunssfsi+0x4c>
     8a0:	b9 3f       	cpi	r27, 0xF9	; 249
     8a2:	cc f3       	brlt	.-14     	; 0x896 <__fixunssfsi+0x34>
     8a4:	86 95       	lsr	r24
     8a6:	77 95       	ror	r23
     8a8:	67 95       	ror	r22
     8aa:	b3 95       	inc	r27
     8ac:	d9 f7       	brne	.-10     	; 0x8a4 <__fixunssfsi+0x42>
     8ae:	3e f4       	brtc	.+14     	; 0x8be <__fixunssfsi+0x5c>
     8b0:	90 95       	com	r25
     8b2:	80 95       	com	r24
     8b4:	70 95       	com	r23
     8b6:	61 95       	neg	r22
     8b8:	7f 4f       	sbci	r23, 0xFF	; 255
     8ba:	8f 4f       	sbci	r24, 0xFF	; 255
     8bc:	9f 4f       	sbci	r25, 0xFF	; 255
     8be:	08 95       	ret

000008c0 <__floatunsisf>:
     8c0:	e8 94       	clt
     8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <__floatsisf+0x12>

000008c4 <__floatsisf>:
     8c4:	97 fb       	bst	r25, 7
     8c6:	3e f4       	brtc	.+14     	; 0x8d6 <__floatsisf+0x12>
     8c8:	90 95       	com	r25
     8ca:	80 95       	com	r24
     8cc:	70 95       	com	r23
     8ce:	61 95       	neg	r22
     8d0:	7f 4f       	sbci	r23, 0xFF	; 255
     8d2:	8f 4f       	sbci	r24, 0xFF	; 255
     8d4:	9f 4f       	sbci	r25, 0xFF	; 255
     8d6:	99 23       	and	r25, r25
     8d8:	a9 f0       	breq	.+42     	; 0x904 <__floatsisf+0x40>
     8da:	f9 2f       	mov	r31, r25
     8dc:	96 e9       	ldi	r25, 0x96	; 150
     8de:	bb 27       	eor	r27, r27
     8e0:	93 95       	inc	r25
     8e2:	f6 95       	lsr	r31
     8e4:	87 95       	ror	r24
     8e6:	77 95       	ror	r23
     8e8:	67 95       	ror	r22
     8ea:	b7 95       	ror	r27
     8ec:	f1 11       	cpse	r31, r1
     8ee:	f8 cf       	rjmp	.-16     	; 0x8e0 <__floatsisf+0x1c>
     8f0:	fa f4       	brpl	.+62     	; 0x930 <__floatsisf+0x6c>
     8f2:	bb 0f       	add	r27, r27
     8f4:	11 f4       	brne	.+4      	; 0x8fa <__floatsisf+0x36>
     8f6:	60 ff       	sbrs	r22, 0
     8f8:	1b c0       	rjmp	.+54     	; 0x930 <__floatsisf+0x6c>
     8fa:	6f 5f       	subi	r22, 0xFF	; 255
     8fc:	7f 4f       	sbci	r23, 0xFF	; 255
     8fe:	8f 4f       	sbci	r24, 0xFF	; 255
     900:	9f 4f       	sbci	r25, 0xFF	; 255
     902:	16 c0       	rjmp	.+44     	; 0x930 <__floatsisf+0x6c>
     904:	88 23       	and	r24, r24
     906:	11 f0       	breq	.+4      	; 0x90c <__floatsisf+0x48>
     908:	96 e9       	ldi	r25, 0x96	; 150
     90a:	11 c0       	rjmp	.+34     	; 0x92e <__floatsisf+0x6a>
     90c:	77 23       	and	r23, r23
     90e:	21 f0       	breq	.+8      	; 0x918 <__floatsisf+0x54>
     910:	9e e8       	ldi	r25, 0x8E	; 142
     912:	87 2f       	mov	r24, r23
     914:	76 2f       	mov	r23, r22
     916:	05 c0       	rjmp	.+10     	; 0x922 <__floatsisf+0x5e>
     918:	66 23       	and	r22, r22
     91a:	71 f0       	breq	.+28     	; 0x938 <__floatsisf+0x74>
     91c:	96 e8       	ldi	r25, 0x86	; 134
     91e:	86 2f       	mov	r24, r22
     920:	70 e0       	ldi	r23, 0x00	; 0
     922:	60 e0       	ldi	r22, 0x00	; 0
     924:	2a f0       	brmi	.+10     	; 0x930 <__floatsisf+0x6c>
     926:	9a 95       	dec	r25
     928:	66 0f       	add	r22, r22
     92a:	77 1f       	adc	r23, r23
     92c:	88 1f       	adc	r24, r24
     92e:	da f7       	brpl	.-10     	; 0x926 <__floatsisf+0x62>
     930:	88 0f       	add	r24, r24
     932:	96 95       	lsr	r25
     934:	87 95       	ror	r24
     936:	97 f9       	bld	r25, 7
     938:	08 95       	ret

0000093a <__fp_split3>:
     93a:	57 fd       	sbrc	r21, 7
     93c:	90 58       	subi	r25, 0x80	; 128
     93e:	44 0f       	add	r20, r20
     940:	55 1f       	adc	r21, r21
     942:	59 f0       	breq	.+22     	; 0x95a <__fp_splitA+0x10>
     944:	5f 3f       	cpi	r21, 0xFF	; 255
     946:	71 f0       	breq	.+28     	; 0x964 <__fp_splitA+0x1a>
     948:	47 95       	ror	r20

0000094a <__fp_splitA>:
     94a:	88 0f       	add	r24, r24
     94c:	97 fb       	bst	r25, 7
     94e:	99 1f       	adc	r25, r25
     950:	61 f0       	breq	.+24     	; 0x96a <__fp_splitA+0x20>
     952:	9f 3f       	cpi	r25, 0xFF	; 255
     954:	79 f0       	breq	.+30     	; 0x974 <__fp_splitA+0x2a>
     956:	87 95       	ror	r24
     958:	08 95       	ret
     95a:	12 16       	cp	r1, r18
     95c:	13 06       	cpc	r1, r19
     95e:	14 06       	cpc	r1, r20
     960:	55 1f       	adc	r21, r21
     962:	f2 cf       	rjmp	.-28     	; 0x948 <__fp_split3+0xe>
     964:	46 95       	lsr	r20
     966:	f1 df       	rcall	.-30     	; 0x94a <__fp_splitA>
     968:	08 c0       	rjmp	.+16     	; 0x97a <__fp_splitA+0x30>
     96a:	16 16       	cp	r1, r22
     96c:	17 06       	cpc	r1, r23
     96e:	18 06       	cpc	r1, r24
     970:	99 1f       	adc	r25, r25
     972:	f1 cf       	rjmp	.-30     	; 0x956 <__fp_splitA+0xc>
     974:	86 95       	lsr	r24
     976:	71 05       	cpc	r23, r1
     978:	61 05       	cpc	r22, r1
     97a:	08 94       	sec
     97c:	08 95       	ret

0000097e <__fp_zero>:
     97e:	e8 94       	clt

00000980 <__fp_szero>:
     980:	bb 27       	eor	r27, r27
     982:	66 27       	eor	r22, r22
     984:	77 27       	eor	r23, r23
     986:	cb 01       	movw	r24, r22
     988:	97 f9       	bld	r25, 7
     98a:	08 95       	ret

0000098c <__mulsf3>:
     98c:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__mulsf3x>
     990:	0c 94 4a 05 	jmp	0xa94	; 0xa94 <__fp_round>
     994:	0e 94 3c 05 	call	0xa78	; 0xa78 <__fp_pscA>
     998:	38 f0       	brcs	.+14     	; 0x9a8 <__mulsf3+0x1c>
     99a:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_pscB>
     99e:	20 f0       	brcs	.+8      	; 0x9a8 <__mulsf3+0x1c>
     9a0:	95 23       	and	r25, r21
     9a2:	11 f0       	breq	.+4      	; 0x9a8 <__mulsf3+0x1c>
     9a4:	0c 94 33 05 	jmp	0xa66	; 0xa66 <__fp_inf>
     9a8:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__fp_nan>
     9ac:	11 24       	eor	r1, r1
     9ae:	0c 94 c0 04 	jmp	0x980	; 0x980 <__fp_szero>

000009b2 <__mulsf3x>:
     9b2:	0e 94 9d 04 	call	0x93a	; 0x93a <__fp_split3>
     9b6:	70 f3       	brcs	.-36     	; 0x994 <__mulsf3+0x8>

000009b8 <__mulsf3_pse>:
     9b8:	95 9f       	mul	r25, r21
     9ba:	c1 f3       	breq	.-16     	; 0x9ac <__mulsf3+0x20>
     9bc:	95 0f       	add	r25, r21
     9be:	50 e0       	ldi	r21, 0x00	; 0
     9c0:	55 1f       	adc	r21, r21
     9c2:	62 9f       	mul	r22, r18
     9c4:	f0 01       	movw	r30, r0
     9c6:	72 9f       	mul	r23, r18
     9c8:	bb 27       	eor	r27, r27
     9ca:	f0 0d       	add	r31, r0
     9cc:	b1 1d       	adc	r27, r1
     9ce:	63 9f       	mul	r22, r19
     9d0:	aa 27       	eor	r26, r26
     9d2:	f0 0d       	add	r31, r0
     9d4:	b1 1d       	adc	r27, r1
     9d6:	aa 1f       	adc	r26, r26
     9d8:	64 9f       	mul	r22, r20
     9da:	66 27       	eor	r22, r22
     9dc:	b0 0d       	add	r27, r0
     9de:	a1 1d       	adc	r26, r1
     9e0:	66 1f       	adc	r22, r22
     9e2:	82 9f       	mul	r24, r18
     9e4:	22 27       	eor	r18, r18
     9e6:	b0 0d       	add	r27, r0
     9e8:	a1 1d       	adc	r26, r1
     9ea:	62 1f       	adc	r22, r18
     9ec:	73 9f       	mul	r23, r19
     9ee:	b0 0d       	add	r27, r0
     9f0:	a1 1d       	adc	r26, r1
     9f2:	62 1f       	adc	r22, r18
     9f4:	83 9f       	mul	r24, r19
     9f6:	a0 0d       	add	r26, r0
     9f8:	61 1d       	adc	r22, r1
     9fa:	22 1f       	adc	r18, r18
     9fc:	74 9f       	mul	r23, r20
     9fe:	33 27       	eor	r19, r19
     a00:	a0 0d       	add	r26, r0
     a02:	61 1d       	adc	r22, r1
     a04:	23 1f       	adc	r18, r19
     a06:	84 9f       	mul	r24, r20
     a08:	60 0d       	add	r22, r0
     a0a:	21 1d       	adc	r18, r1
     a0c:	82 2f       	mov	r24, r18
     a0e:	76 2f       	mov	r23, r22
     a10:	6a 2f       	mov	r22, r26
     a12:	11 24       	eor	r1, r1
     a14:	9f 57       	subi	r25, 0x7F	; 127
     a16:	50 40       	sbci	r21, 0x00	; 0
     a18:	9a f0       	brmi	.+38     	; 0xa40 <__mulsf3_pse+0x88>
     a1a:	f1 f0       	breq	.+60     	; 0xa58 <__mulsf3_pse+0xa0>
     a1c:	88 23       	and	r24, r24
     a1e:	4a f0       	brmi	.+18     	; 0xa32 <__mulsf3_pse+0x7a>
     a20:	ee 0f       	add	r30, r30
     a22:	ff 1f       	adc	r31, r31
     a24:	bb 1f       	adc	r27, r27
     a26:	66 1f       	adc	r22, r22
     a28:	77 1f       	adc	r23, r23
     a2a:	88 1f       	adc	r24, r24
     a2c:	91 50       	subi	r25, 0x01	; 1
     a2e:	50 40       	sbci	r21, 0x00	; 0
     a30:	a9 f7       	brne	.-22     	; 0xa1c <__mulsf3_pse+0x64>
     a32:	9e 3f       	cpi	r25, 0xFE	; 254
     a34:	51 05       	cpc	r21, r1
     a36:	80 f0       	brcs	.+32     	; 0xa58 <__mulsf3_pse+0xa0>
     a38:	0c 94 33 05 	jmp	0xa66	; 0xa66 <__fp_inf>
     a3c:	0c 94 c0 04 	jmp	0x980	; 0x980 <__fp_szero>
     a40:	5f 3f       	cpi	r21, 0xFF	; 255
     a42:	e4 f3       	brlt	.-8      	; 0xa3c <__mulsf3_pse+0x84>
     a44:	98 3e       	cpi	r25, 0xE8	; 232
     a46:	d4 f3       	brlt	.-12     	; 0xa3c <__mulsf3_pse+0x84>
     a48:	86 95       	lsr	r24
     a4a:	77 95       	ror	r23
     a4c:	67 95       	ror	r22
     a4e:	b7 95       	ror	r27
     a50:	f7 95       	ror	r31
     a52:	e7 95       	ror	r30
     a54:	9f 5f       	subi	r25, 0xFF	; 255
     a56:	c1 f7       	brne	.-16     	; 0xa48 <__mulsf3_pse+0x90>
     a58:	fe 2b       	or	r31, r30
     a5a:	88 0f       	add	r24, r24
     a5c:	91 1d       	adc	r25, r1
     a5e:	96 95       	lsr	r25
     a60:	87 95       	ror	r24
     a62:	97 f9       	bld	r25, 7
     a64:	08 95       	ret

00000a66 <__fp_inf>:
     a66:	97 f9       	bld	r25, 7
     a68:	9f 67       	ori	r25, 0x7F	; 127
     a6a:	80 e8       	ldi	r24, 0x80	; 128
     a6c:	70 e0       	ldi	r23, 0x00	; 0
     a6e:	60 e0       	ldi	r22, 0x00	; 0
     a70:	08 95       	ret

00000a72 <__fp_nan>:
     a72:	9f ef       	ldi	r25, 0xFF	; 255
     a74:	80 ec       	ldi	r24, 0xC0	; 192
     a76:	08 95       	ret

00000a78 <__fp_pscA>:
     a78:	00 24       	eor	r0, r0
     a7a:	0a 94       	dec	r0
     a7c:	16 16       	cp	r1, r22
     a7e:	17 06       	cpc	r1, r23
     a80:	18 06       	cpc	r1, r24
     a82:	09 06       	cpc	r0, r25
     a84:	08 95       	ret

00000a86 <__fp_pscB>:
     a86:	00 24       	eor	r0, r0
     a88:	0a 94       	dec	r0
     a8a:	12 16       	cp	r1, r18
     a8c:	13 06       	cpc	r1, r19
     a8e:	14 06       	cpc	r1, r20
     a90:	05 06       	cpc	r0, r21
     a92:	08 95       	ret

00000a94 <__fp_round>:
     a94:	09 2e       	mov	r0, r25
     a96:	03 94       	inc	r0
     a98:	00 0c       	add	r0, r0
     a9a:	11 f4       	brne	.+4      	; 0xaa0 <__fp_round+0xc>
     a9c:	88 23       	and	r24, r24
     a9e:	52 f0       	brmi	.+20     	; 0xab4 <__fp_round+0x20>
     aa0:	bb 0f       	add	r27, r27
     aa2:	40 f4       	brcc	.+16     	; 0xab4 <__fp_round+0x20>
     aa4:	bf 2b       	or	r27, r31
     aa6:	11 f4       	brne	.+4      	; 0xaac <__fp_round+0x18>
     aa8:	60 ff       	sbrs	r22, 0
     aaa:	04 c0       	rjmp	.+8      	; 0xab4 <__fp_round+0x20>
     aac:	6f 5f       	subi	r22, 0xFF	; 255
     aae:	7f 4f       	sbci	r23, 0xFF	; 255
     ab0:	8f 4f       	sbci	r24, 0xFF	; 255
     ab2:	9f 4f       	sbci	r25, 0xFF	; 255
     ab4:	08 95       	ret

00000ab6 <__udivmodqi4>:
     ab6:	99 1b       	sub	r25, r25
     ab8:	79 e0       	ldi	r23, 0x09	; 9
     aba:	04 c0       	rjmp	.+8      	; 0xac4 <__udivmodqi4_ep>

00000abc <__udivmodqi4_loop>:
     abc:	99 1f       	adc	r25, r25
     abe:	96 17       	cp	r25, r22
     ac0:	08 f0       	brcs	.+2      	; 0xac4 <__udivmodqi4_ep>
     ac2:	96 1b       	sub	r25, r22

00000ac4 <__udivmodqi4_ep>:
     ac4:	88 1f       	adc	r24, r24
     ac6:	7a 95       	dec	r23
     ac8:	c9 f7       	brne	.-14     	; 0xabc <__udivmodqi4_loop>
     aca:	80 95       	com	r24
     acc:	08 95       	ret

00000ace <__divmodhi4>:
     ace:	97 fb       	bst	r25, 7
     ad0:	07 2e       	mov	r0, r23
     ad2:	16 f4       	brtc	.+4      	; 0xad8 <__divmodhi4+0xa>
     ad4:	00 94       	com	r0
     ad6:	07 d0       	rcall	.+14     	; 0xae6 <__divmodhi4_neg1>
     ad8:	77 fd       	sbrc	r23, 7
     ada:	09 d0       	rcall	.+18     	; 0xaee <__divmodhi4_neg2>
     adc:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__udivmodhi4>
     ae0:	07 fc       	sbrc	r0, 7
     ae2:	05 d0       	rcall	.+10     	; 0xaee <__divmodhi4_neg2>
     ae4:	3e f4       	brtc	.+14     	; 0xaf4 <__divmodhi4_exit>

00000ae6 <__divmodhi4_neg1>:
     ae6:	90 95       	com	r25
     ae8:	81 95       	neg	r24
     aea:	9f 4f       	sbci	r25, 0xFF	; 255
     aec:	08 95       	ret

00000aee <__divmodhi4_neg2>:
     aee:	70 95       	com	r23
     af0:	61 95       	neg	r22
     af2:	7f 4f       	sbci	r23, 0xFF	; 255

00000af4 <__divmodhi4_exit>:
     af4:	08 95       	ret

00000af6 <__udivmodhi4>:
     af6:	aa 1b       	sub	r26, r26
     af8:	bb 1b       	sub	r27, r27
     afa:	51 e1       	ldi	r21, 0x11	; 17
     afc:	07 c0       	rjmp	.+14     	; 0xb0c <__udivmodhi4_ep>

00000afe <__udivmodhi4_loop>:
     afe:	aa 1f       	adc	r26, r26
     b00:	bb 1f       	adc	r27, r27
     b02:	a6 17       	cp	r26, r22
     b04:	b7 07       	cpc	r27, r23
     b06:	10 f0       	brcs	.+4      	; 0xb0c <__udivmodhi4_ep>
     b08:	a6 1b       	sub	r26, r22
     b0a:	b7 0b       	sbc	r27, r23

00000b0c <__udivmodhi4_ep>:
     b0c:	88 1f       	adc	r24, r24
     b0e:	99 1f       	adc	r25, r25
     b10:	5a 95       	dec	r21
     b12:	a9 f7       	brne	.-22     	; 0xafe <__udivmodhi4_loop>
     b14:	80 95       	com	r24
     b16:	90 95       	com	r25
     b18:	bc 01       	movw	r22, r24
     b1a:	cd 01       	movw	r24, r26
     b1c:	08 95       	ret

00000b1e <dtostrf>:
     b1e:	ef 92       	push	r14
     b20:	0f 93       	push	r16
     b22:	1f 93       	push	r17
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	e8 01       	movw	r28, r16
     b2a:	47 fd       	sbrc	r20, 7
     b2c:	02 c0       	rjmp	.+4      	; 0xb32 <dtostrf+0x14>
     b2e:	34 e0       	ldi	r19, 0x04	; 4
     b30:	01 c0       	rjmp	.+2      	; 0xb34 <dtostrf+0x16>
     b32:	34 e1       	ldi	r19, 0x14	; 20
     b34:	04 2e       	mov	r0, r20
     b36:	00 0c       	add	r0, r0
     b38:	55 0b       	sbc	r21, r21
     b3a:	57 ff       	sbrs	r21, 7
     b3c:	03 c0       	rjmp	.+6      	; 0xb44 <dtostrf+0x26>
     b3e:	51 95       	neg	r21
     b40:	41 95       	neg	r20
     b42:	51 09       	sbc	r21, r1
     b44:	e3 2e       	mov	r14, r19
     b46:	02 2f       	mov	r16, r18
     b48:	24 2f       	mov	r18, r20
     b4a:	ae 01       	movw	r20, r28
     b4c:	0e 94 b2 07 	call	0xf64	; 0xf64 <dtoa_prf>
     b50:	ce 01       	movw	r24, r28
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	ef 90       	pop	r14
     b5c:	08 95       	ret

00000b5e <sprintf>:
     b5e:	ae e0       	ldi	r26, 0x0E	; 14
     b60:	b0 e0       	ldi	r27, 0x00	; 0
     b62:	e5 eb       	ldi	r30, 0xB5	; 181
     b64:	f5 e0       	ldi	r31, 0x05	; 5
     b66:	0c 94 a2 0a 	jmp	0x1544	; 0x1544 <__prologue_saves__+0x1c>
     b6a:	0d 89       	ldd	r16, Y+21	; 0x15
     b6c:	1e 89       	ldd	r17, Y+22	; 0x16
     b6e:	86 e0       	ldi	r24, 0x06	; 6
     b70:	8c 83       	std	Y+4, r24	; 0x04
     b72:	1a 83       	std	Y+2, r17	; 0x02
     b74:	09 83       	std	Y+1, r16	; 0x01
     b76:	8f ef       	ldi	r24, 0xFF	; 255
     b78:	9f e7       	ldi	r25, 0x7F	; 127
     b7a:	9e 83       	std	Y+6, r25	; 0x06
     b7c:	8d 83       	std	Y+5, r24	; 0x05
     b7e:	ae 01       	movw	r20, r28
     b80:	47 5e       	subi	r20, 0xE7	; 231
     b82:	5f 4f       	sbci	r21, 0xFF	; 255
     b84:	6f 89       	ldd	r22, Y+23	; 0x17
     b86:	78 8d       	ldd	r23, Y+24	; 0x18
     b88:	ce 01       	movw	r24, r28
     b8a:	01 96       	adiw	r24, 0x01	; 1
     b8c:	0e 94 d1 05 	call	0xba2	; 0xba2 <vfprintf>
     b90:	ef 81       	ldd	r30, Y+7	; 0x07
     b92:	f8 85       	ldd	r31, Y+8	; 0x08
     b94:	e0 0f       	add	r30, r16
     b96:	f1 1f       	adc	r31, r17
     b98:	10 82       	st	Z, r1
     b9a:	2e 96       	adiw	r28, 0x0e	; 14
     b9c:	e4 e0       	ldi	r30, 0x04	; 4
     b9e:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__epilogue_restores__+0x1c>

00000ba2 <vfprintf>:
     ba2:	ab e0       	ldi	r26, 0x0B	; 11
     ba4:	b0 e0       	ldi	r27, 0x00	; 0
     ba6:	e7 ed       	ldi	r30, 0xD7	; 215
     ba8:	f5 e0       	ldi	r31, 0x05	; 5
     baa:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__prologue_saves__>
     bae:	6c 01       	movw	r12, r24
     bb0:	7b 01       	movw	r14, r22
     bb2:	8a 01       	movw	r16, r20
     bb4:	fc 01       	movw	r30, r24
     bb6:	17 82       	std	Z+7, r1	; 0x07
     bb8:	16 82       	std	Z+6, r1	; 0x06
     bba:	83 81       	ldd	r24, Z+3	; 0x03
     bbc:	81 ff       	sbrs	r24, 1
     bbe:	cc c1       	rjmp	.+920    	; 0xf58 <vfprintf+0x3b6>
     bc0:	ce 01       	movw	r24, r28
     bc2:	01 96       	adiw	r24, 0x01	; 1
     bc4:	3c 01       	movw	r6, r24
     bc6:	f6 01       	movw	r30, r12
     bc8:	93 81       	ldd	r25, Z+3	; 0x03
     bca:	f7 01       	movw	r30, r14
     bcc:	93 fd       	sbrc	r25, 3
     bce:	85 91       	lpm	r24, Z+
     bd0:	93 ff       	sbrs	r25, 3
     bd2:	81 91       	ld	r24, Z+
     bd4:	7f 01       	movw	r14, r30
     bd6:	88 23       	and	r24, r24
     bd8:	09 f4       	brne	.+2      	; 0xbdc <vfprintf+0x3a>
     bda:	ba c1       	rjmp	.+884    	; 0xf50 <vfprintf+0x3ae>
     bdc:	85 32       	cpi	r24, 0x25	; 37
     bde:	39 f4       	brne	.+14     	; 0xbee <vfprintf+0x4c>
     be0:	93 fd       	sbrc	r25, 3
     be2:	85 91       	lpm	r24, Z+
     be4:	93 ff       	sbrs	r25, 3
     be6:	81 91       	ld	r24, Z+
     be8:	7f 01       	movw	r14, r30
     bea:	85 32       	cpi	r24, 0x25	; 37
     bec:	29 f4       	brne	.+10     	; 0xbf8 <vfprintf+0x56>
     bee:	b6 01       	movw	r22, r12
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     bf6:	e7 cf       	rjmp	.-50     	; 0xbc6 <vfprintf+0x24>
     bf8:	91 2c       	mov	r9, r1
     bfa:	21 2c       	mov	r2, r1
     bfc:	31 2c       	mov	r3, r1
     bfe:	ff e1       	ldi	r31, 0x1F	; 31
     c00:	f3 15       	cp	r31, r3
     c02:	d8 f0       	brcs	.+54     	; 0xc3a <vfprintf+0x98>
     c04:	8b 32       	cpi	r24, 0x2B	; 43
     c06:	79 f0       	breq	.+30     	; 0xc26 <vfprintf+0x84>
     c08:	38 f4       	brcc	.+14     	; 0xc18 <vfprintf+0x76>
     c0a:	80 32       	cpi	r24, 0x20	; 32
     c0c:	79 f0       	breq	.+30     	; 0xc2c <vfprintf+0x8a>
     c0e:	83 32       	cpi	r24, 0x23	; 35
     c10:	a1 f4       	brne	.+40     	; 0xc3a <vfprintf+0x98>
     c12:	23 2d       	mov	r18, r3
     c14:	20 61       	ori	r18, 0x10	; 16
     c16:	1d c0       	rjmp	.+58     	; 0xc52 <vfprintf+0xb0>
     c18:	8d 32       	cpi	r24, 0x2D	; 45
     c1a:	61 f0       	breq	.+24     	; 0xc34 <vfprintf+0x92>
     c1c:	80 33       	cpi	r24, 0x30	; 48
     c1e:	69 f4       	brne	.+26     	; 0xc3a <vfprintf+0x98>
     c20:	23 2d       	mov	r18, r3
     c22:	21 60       	ori	r18, 0x01	; 1
     c24:	16 c0       	rjmp	.+44     	; 0xc52 <vfprintf+0xb0>
     c26:	83 2d       	mov	r24, r3
     c28:	82 60       	ori	r24, 0x02	; 2
     c2a:	38 2e       	mov	r3, r24
     c2c:	e3 2d       	mov	r30, r3
     c2e:	e4 60       	ori	r30, 0x04	; 4
     c30:	3e 2e       	mov	r3, r30
     c32:	2a c0       	rjmp	.+84     	; 0xc88 <vfprintf+0xe6>
     c34:	f3 2d       	mov	r31, r3
     c36:	f8 60       	ori	r31, 0x08	; 8
     c38:	1d c0       	rjmp	.+58     	; 0xc74 <vfprintf+0xd2>
     c3a:	37 fc       	sbrc	r3, 7
     c3c:	2d c0       	rjmp	.+90     	; 0xc98 <vfprintf+0xf6>
     c3e:	20 ed       	ldi	r18, 0xD0	; 208
     c40:	28 0f       	add	r18, r24
     c42:	2a 30       	cpi	r18, 0x0A	; 10
     c44:	40 f0       	brcs	.+16     	; 0xc56 <vfprintf+0xb4>
     c46:	8e 32       	cpi	r24, 0x2E	; 46
     c48:	b9 f4       	brne	.+46     	; 0xc78 <vfprintf+0xd6>
     c4a:	36 fc       	sbrc	r3, 6
     c4c:	81 c1       	rjmp	.+770    	; 0xf50 <vfprintf+0x3ae>
     c4e:	23 2d       	mov	r18, r3
     c50:	20 64       	ori	r18, 0x40	; 64
     c52:	32 2e       	mov	r3, r18
     c54:	19 c0       	rjmp	.+50     	; 0xc88 <vfprintf+0xe6>
     c56:	36 fe       	sbrs	r3, 6
     c58:	06 c0       	rjmp	.+12     	; 0xc66 <vfprintf+0xc4>
     c5a:	8a e0       	ldi	r24, 0x0A	; 10
     c5c:	98 9e       	mul	r9, r24
     c5e:	20 0d       	add	r18, r0
     c60:	11 24       	eor	r1, r1
     c62:	92 2e       	mov	r9, r18
     c64:	11 c0       	rjmp	.+34     	; 0xc88 <vfprintf+0xe6>
     c66:	ea e0       	ldi	r30, 0x0A	; 10
     c68:	2e 9e       	mul	r2, r30
     c6a:	20 0d       	add	r18, r0
     c6c:	11 24       	eor	r1, r1
     c6e:	22 2e       	mov	r2, r18
     c70:	f3 2d       	mov	r31, r3
     c72:	f0 62       	ori	r31, 0x20	; 32
     c74:	3f 2e       	mov	r3, r31
     c76:	08 c0       	rjmp	.+16     	; 0xc88 <vfprintf+0xe6>
     c78:	8c 36       	cpi	r24, 0x6C	; 108
     c7a:	21 f4       	brne	.+8      	; 0xc84 <vfprintf+0xe2>
     c7c:	83 2d       	mov	r24, r3
     c7e:	80 68       	ori	r24, 0x80	; 128
     c80:	38 2e       	mov	r3, r24
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <vfprintf+0xe6>
     c84:	88 36       	cpi	r24, 0x68	; 104
     c86:	41 f4       	brne	.+16     	; 0xc98 <vfprintf+0xf6>
     c88:	f7 01       	movw	r30, r14
     c8a:	93 fd       	sbrc	r25, 3
     c8c:	85 91       	lpm	r24, Z+
     c8e:	93 ff       	sbrs	r25, 3
     c90:	81 91       	ld	r24, Z+
     c92:	7f 01       	movw	r14, r30
     c94:	81 11       	cpse	r24, r1
     c96:	b3 cf       	rjmp	.-154    	; 0xbfe <vfprintf+0x5c>
     c98:	98 2f       	mov	r25, r24
     c9a:	9f 7d       	andi	r25, 0xDF	; 223
     c9c:	95 54       	subi	r25, 0x45	; 69
     c9e:	93 30       	cpi	r25, 0x03	; 3
     ca0:	28 f4       	brcc	.+10     	; 0xcac <vfprintf+0x10a>
     ca2:	0c 5f       	subi	r16, 0xFC	; 252
     ca4:	1f 4f       	sbci	r17, 0xFF	; 255
     ca6:	9f e3       	ldi	r25, 0x3F	; 63
     ca8:	99 83       	std	Y+1, r25	; 0x01
     caa:	0d c0       	rjmp	.+26     	; 0xcc6 <vfprintf+0x124>
     cac:	83 36       	cpi	r24, 0x63	; 99
     cae:	31 f0       	breq	.+12     	; 0xcbc <vfprintf+0x11a>
     cb0:	83 37       	cpi	r24, 0x73	; 115
     cb2:	71 f0       	breq	.+28     	; 0xcd0 <vfprintf+0x12e>
     cb4:	83 35       	cpi	r24, 0x53	; 83
     cb6:	09 f0       	breq	.+2      	; 0xcba <vfprintf+0x118>
     cb8:	59 c0       	rjmp	.+178    	; 0xd6c <vfprintf+0x1ca>
     cba:	21 c0       	rjmp	.+66     	; 0xcfe <vfprintf+0x15c>
     cbc:	f8 01       	movw	r30, r16
     cbe:	80 81       	ld	r24, Z
     cc0:	89 83       	std	Y+1, r24	; 0x01
     cc2:	0e 5f       	subi	r16, 0xFE	; 254
     cc4:	1f 4f       	sbci	r17, 0xFF	; 255
     cc6:	88 24       	eor	r8, r8
     cc8:	83 94       	inc	r8
     cca:	91 2c       	mov	r9, r1
     ccc:	53 01       	movw	r10, r6
     cce:	13 c0       	rjmp	.+38     	; 0xcf6 <vfprintf+0x154>
     cd0:	28 01       	movw	r4, r16
     cd2:	f2 e0       	ldi	r31, 0x02	; 2
     cd4:	4f 0e       	add	r4, r31
     cd6:	51 1c       	adc	r5, r1
     cd8:	f8 01       	movw	r30, r16
     cda:	a0 80       	ld	r10, Z
     cdc:	b1 80       	ldd	r11, Z+1	; 0x01
     cde:	36 fe       	sbrs	r3, 6
     ce0:	03 c0       	rjmp	.+6      	; 0xce8 <vfprintf+0x146>
     ce2:	69 2d       	mov	r22, r9
     ce4:	70 e0       	ldi	r23, 0x00	; 0
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <vfprintf+0x14a>
     ce8:	6f ef       	ldi	r22, 0xFF	; 255
     cea:	7f ef       	ldi	r23, 0xFF	; 255
     cec:	c5 01       	movw	r24, r10
     cee:	0e 94 ef 09 	call	0x13de	; 0x13de <strnlen>
     cf2:	4c 01       	movw	r8, r24
     cf4:	82 01       	movw	r16, r4
     cf6:	f3 2d       	mov	r31, r3
     cf8:	ff 77       	andi	r31, 0x7F	; 127
     cfa:	3f 2e       	mov	r3, r31
     cfc:	16 c0       	rjmp	.+44     	; 0xd2a <vfprintf+0x188>
     cfe:	28 01       	movw	r4, r16
     d00:	22 e0       	ldi	r18, 0x02	; 2
     d02:	42 0e       	add	r4, r18
     d04:	51 1c       	adc	r5, r1
     d06:	f8 01       	movw	r30, r16
     d08:	a0 80       	ld	r10, Z
     d0a:	b1 80       	ldd	r11, Z+1	; 0x01
     d0c:	36 fe       	sbrs	r3, 6
     d0e:	03 c0       	rjmp	.+6      	; 0xd16 <vfprintf+0x174>
     d10:	69 2d       	mov	r22, r9
     d12:	70 e0       	ldi	r23, 0x00	; 0
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <vfprintf+0x178>
     d16:	6f ef       	ldi	r22, 0xFF	; 255
     d18:	7f ef       	ldi	r23, 0xFF	; 255
     d1a:	c5 01       	movw	r24, r10
     d1c:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <strnlen_P>
     d20:	4c 01       	movw	r8, r24
     d22:	f3 2d       	mov	r31, r3
     d24:	f0 68       	ori	r31, 0x80	; 128
     d26:	3f 2e       	mov	r3, r31
     d28:	82 01       	movw	r16, r4
     d2a:	33 fc       	sbrc	r3, 3
     d2c:	1b c0       	rjmp	.+54     	; 0xd64 <vfprintf+0x1c2>
     d2e:	82 2d       	mov	r24, r2
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	88 16       	cp	r8, r24
     d34:	99 06       	cpc	r9, r25
     d36:	b0 f4       	brcc	.+44     	; 0xd64 <vfprintf+0x1c2>
     d38:	b6 01       	movw	r22, r12
     d3a:	80 e2       	ldi	r24, 0x20	; 32
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     d42:	2a 94       	dec	r2
     d44:	f4 cf       	rjmp	.-24     	; 0xd2e <vfprintf+0x18c>
     d46:	f5 01       	movw	r30, r10
     d48:	37 fc       	sbrc	r3, 7
     d4a:	85 91       	lpm	r24, Z+
     d4c:	37 fe       	sbrs	r3, 7
     d4e:	81 91       	ld	r24, Z+
     d50:	5f 01       	movw	r10, r30
     d52:	b6 01       	movw	r22, r12
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     d5a:	21 10       	cpse	r2, r1
     d5c:	2a 94       	dec	r2
     d5e:	21 e0       	ldi	r18, 0x01	; 1
     d60:	82 1a       	sub	r8, r18
     d62:	91 08       	sbc	r9, r1
     d64:	81 14       	cp	r8, r1
     d66:	91 04       	cpc	r9, r1
     d68:	71 f7       	brne	.-36     	; 0xd46 <vfprintf+0x1a4>
     d6a:	e8 c0       	rjmp	.+464    	; 0xf3c <vfprintf+0x39a>
     d6c:	84 36       	cpi	r24, 0x64	; 100
     d6e:	11 f0       	breq	.+4      	; 0xd74 <vfprintf+0x1d2>
     d70:	89 36       	cpi	r24, 0x69	; 105
     d72:	41 f5       	brne	.+80     	; 0xdc4 <vfprintf+0x222>
     d74:	f8 01       	movw	r30, r16
     d76:	37 fe       	sbrs	r3, 7
     d78:	07 c0       	rjmp	.+14     	; 0xd88 <vfprintf+0x1e6>
     d7a:	60 81       	ld	r22, Z
     d7c:	71 81       	ldd	r23, Z+1	; 0x01
     d7e:	82 81       	ldd	r24, Z+2	; 0x02
     d80:	93 81       	ldd	r25, Z+3	; 0x03
     d82:	0c 5f       	subi	r16, 0xFC	; 252
     d84:	1f 4f       	sbci	r17, 0xFF	; 255
     d86:	08 c0       	rjmp	.+16     	; 0xd98 <vfprintf+0x1f6>
     d88:	60 81       	ld	r22, Z
     d8a:	71 81       	ldd	r23, Z+1	; 0x01
     d8c:	07 2e       	mov	r0, r23
     d8e:	00 0c       	add	r0, r0
     d90:	88 0b       	sbc	r24, r24
     d92:	99 0b       	sbc	r25, r25
     d94:	0e 5f       	subi	r16, 0xFE	; 254
     d96:	1f 4f       	sbci	r17, 0xFF	; 255
     d98:	f3 2d       	mov	r31, r3
     d9a:	ff 76       	andi	r31, 0x6F	; 111
     d9c:	3f 2e       	mov	r3, r31
     d9e:	97 ff       	sbrs	r25, 7
     da0:	09 c0       	rjmp	.+18     	; 0xdb4 <vfprintf+0x212>
     da2:	90 95       	com	r25
     da4:	80 95       	com	r24
     da6:	70 95       	com	r23
     da8:	61 95       	neg	r22
     daa:	7f 4f       	sbci	r23, 0xFF	; 255
     dac:	8f 4f       	sbci	r24, 0xFF	; 255
     dae:	9f 4f       	sbci	r25, 0xFF	; 255
     db0:	f0 68       	ori	r31, 0x80	; 128
     db2:	3f 2e       	mov	r3, r31
     db4:	2a e0       	ldi	r18, 0x0A	; 10
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	a3 01       	movw	r20, r6
     dba:	0e 94 36 0a 	call	0x146c	; 0x146c <__ultoa_invert>
     dbe:	88 2e       	mov	r8, r24
     dc0:	86 18       	sub	r8, r6
     dc2:	45 c0       	rjmp	.+138    	; 0xe4e <vfprintf+0x2ac>
     dc4:	85 37       	cpi	r24, 0x75	; 117
     dc6:	31 f4       	brne	.+12     	; 0xdd4 <vfprintf+0x232>
     dc8:	23 2d       	mov	r18, r3
     dca:	2f 7e       	andi	r18, 0xEF	; 239
     dcc:	b2 2e       	mov	r11, r18
     dce:	2a e0       	ldi	r18, 0x0A	; 10
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	25 c0       	rjmp	.+74     	; 0xe1e <vfprintf+0x27c>
     dd4:	93 2d       	mov	r25, r3
     dd6:	99 7f       	andi	r25, 0xF9	; 249
     dd8:	b9 2e       	mov	r11, r25
     dda:	8f 36       	cpi	r24, 0x6F	; 111
     ddc:	c1 f0       	breq	.+48     	; 0xe0e <vfprintf+0x26c>
     dde:	18 f4       	brcc	.+6      	; 0xde6 <vfprintf+0x244>
     de0:	88 35       	cpi	r24, 0x58	; 88
     de2:	79 f0       	breq	.+30     	; 0xe02 <vfprintf+0x260>
     de4:	b5 c0       	rjmp	.+362    	; 0xf50 <vfprintf+0x3ae>
     de6:	80 37       	cpi	r24, 0x70	; 112
     de8:	19 f0       	breq	.+6      	; 0xdf0 <vfprintf+0x24e>
     dea:	88 37       	cpi	r24, 0x78	; 120
     dec:	21 f0       	breq	.+8      	; 0xdf6 <vfprintf+0x254>
     dee:	b0 c0       	rjmp	.+352    	; 0xf50 <vfprintf+0x3ae>
     df0:	e9 2f       	mov	r30, r25
     df2:	e0 61       	ori	r30, 0x10	; 16
     df4:	be 2e       	mov	r11, r30
     df6:	b4 fe       	sbrs	r11, 4
     df8:	0d c0       	rjmp	.+26     	; 0xe14 <vfprintf+0x272>
     dfa:	fb 2d       	mov	r31, r11
     dfc:	f4 60       	ori	r31, 0x04	; 4
     dfe:	bf 2e       	mov	r11, r31
     e00:	09 c0       	rjmp	.+18     	; 0xe14 <vfprintf+0x272>
     e02:	34 fe       	sbrs	r3, 4
     e04:	0a c0       	rjmp	.+20     	; 0xe1a <vfprintf+0x278>
     e06:	29 2f       	mov	r18, r25
     e08:	26 60       	ori	r18, 0x06	; 6
     e0a:	b2 2e       	mov	r11, r18
     e0c:	06 c0       	rjmp	.+12     	; 0xe1a <vfprintf+0x278>
     e0e:	28 e0       	ldi	r18, 0x08	; 8
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	05 c0       	rjmp	.+10     	; 0xe1e <vfprintf+0x27c>
     e14:	20 e1       	ldi	r18, 0x10	; 16
     e16:	30 e0       	ldi	r19, 0x00	; 0
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <vfprintf+0x27c>
     e1a:	20 e1       	ldi	r18, 0x10	; 16
     e1c:	32 e0       	ldi	r19, 0x02	; 2
     e1e:	f8 01       	movw	r30, r16
     e20:	b7 fe       	sbrs	r11, 7
     e22:	07 c0       	rjmp	.+14     	; 0xe32 <vfprintf+0x290>
     e24:	60 81       	ld	r22, Z
     e26:	71 81       	ldd	r23, Z+1	; 0x01
     e28:	82 81       	ldd	r24, Z+2	; 0x02
     e2a:	93 81       	ldd	r25, Z+3	; 0x03
     e2c:	0c 5f       	subi	r16, 0xFC	; 252
     e2e:	1f 4f       	sbci	r17, 0xFF	; 255
     e30:	06 c0       	rjmp	.+12     	; 0xe3e <vfprintf+0x29c>
     e32:	60 81       	ld	r22, Z
     e34:	71 81       	ldd	r23, Z+1	; 0x01
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	0e 5f       	subi	r16, 0xFE	; 254
     e3c:	1f 4f       	sbci	r17, 0xFF	; 255
     e3e:	a3 01       	movw	r20, r6
     e40:	0e 94 36 0a 	call	0x146c	; 0x146c <__ultoa_invert>
     e44:	88 2e       	mov	r8, r24
     e46:	86 18       	sub	r8, r6
     e48:	fb 2d       	mov	r31, r11
     e4a:	ff 77       	andi	r31, 0x7F	; 127
     e4c:	3f 2e       	mov	r3, r31
     e4e:	36 fe       	sbrs	r3, 6
     e50:	0d c0       	rjmp	.+26     	; 0xe6c <vfprintf+0x2ca>
     e52:	23 2d       	mov	r18, r3
     e54:	2e 7f       	andi	r18, 0xFE	; 254
     e56:	a2 2e       	mov	r10, r18
     e58:	89 14       	cp	r8, r9
     e5a:	58 f4       	brcc	.+22     	; 0xe72 <vfprintf+0x2d0>
     e5c:	34 fe       	sbrs	r3, 4
     e5e:	0b c0       	rjmp	.+22     	; 0xe76 <vfprintf+0x2d4>
     e60:	32 fc       	sbrc	r3, 2
     e62:	09 c0       	rjmp	.+18     	; 0xe76 <vfprintf+0x2d4>
     e64:	83 2d       	mov	r24, r3
     e66:	8e 7e       	andi	r24, 0xEE	; 238
     e68:	a8 2e       	mov	r10, r24
     e6a:	05 c0       	rjmp	.+10     	; 0xe76 <vfprintf+0x2d4>
     e6c:	b8 2c       	mov	r11, r8
     e6e:	a3 2c       	mov	r10, r3
     e70:	03 c0       	rjmp	.+6      	; 0xe78 <vfprintf+0x2d6>
     e72:	b8 2c       	mov	r11, r8
     e74:	01 c0       	rjmp	.+2      	; 0xe78 <vfprintf+0x2d6>
     e76:	b9 2c       	mov	r11, r9
     e78:	a4 fe       	sbrs	r10, 4
     e7a:	0f c0       	rjmp	.+30     	; 0xe9a <vfprintf+0x2f8>
     e7c:	fe 01       	movw	r30, r28
     e7e:	e8 0d       	add	r30, r8
     e80:	f1 1d       	adc	r31, r1
     e82:	80 81       	ld	r24, Z
     e84:	80 33       	cpi	r24, 0x30	; 48
     e86:	21 f4       	brne	.+8      	; 0xe90 <vfprintf+0x2ee>
     e88:	9a 2d       	mov	r25, r10
     e8a:	99 7e       	andi	r25, 0xE9	; 233
     e8c:	a9 2e       	mov	r10, r25
     e8e:	09 c0       	rjmp	.+18     	; 0xea2 <vfprintf+0x300>
     e90:	a2 fe       	sbrs	r10, 2
     e92:	06 c0       	rjmp	.+12     	; 0xea0 <vfprintf+0x2fe>
     e94:	b3 94       	inc	r11
     e96:	b3 94       	inc	r11
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <vfprintf+0x300>
     e9a:	8a 2d       	mov	r24, r10
     e9c:	86 78       	andi	r24, 0x86	; 134
     e9e:	09 f0       	breq	.+2      	; 0xea2 <vfprintf+0x300>
     ea0:	b3 94       	inc	r11
     ea2:	a3 fc       	sbrc	r10, 3
     ea4:	11 c0       	rjmp	.+34     	; 0xec8 <vfprintf+0x326>
     ea6:	a0 fe       	sbrs	r10, 0
     ea8:	06 c0       	rjmp	.+12     	; 0xeb6 <vfprintf+0x314>
     eaa:	b2 14       	cp	r11, r2
     eac:	88 f4       	brcc	.+34     	; 0xed0 <vfprintf+0x32e>
     eae:	28 0c       	add	r2, r8
     eb0:	92 2c       	mov	r9, r2
     eb2:	9b 18       	sub	r9, r11
     eb4:	0e c0       	rjmp	.+28     	; 0xed2 <vfprintf+0x330>
     eb6:	b2 14       	cp	r11, r2
     eb8:	60 f4       	brcc	.+24     	; 0xed2 <vfprintf+0x330>
     eba:	b6 01       	movw	r22, r12
     ebc:	80 e2       	ldi	r24, 0x20	; 32
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     ec4:	b3 94       	inc	r11
     ec6:	f7 cf       	rjmp	.-18     	; 0xeb6 <vfprintf+0x314>
     ec8:	b2 14       	cp	r11, r2
     eca:	18 f4       	brcc	.+6      	; 0xed2 <vfprintf+0x330>
     ecc:	2b 18       	sub	r2, r11
     ece:	02 c0       	rjmp	.+4      	; 0xed4 <vfprintf+0x332>
     ed0:	98 2c       	mov	r9, r8
     ed2:	21 2c       	mov	r2, r1
     ed4:	a4 fe       	sbrs	r10, 4
     ed6:	10 c0       	rjmp	.+32     	; 0xef8 <vfprintf+0x356>
     ed8:	b6 01       	movw	r22, r12
     eda:	80 e3       	ldi	r24, 0x30	; 48
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     ee2:	a2 fe       	sbrs	r10, 2
     ee4:	17 c0       	rjmp	.+46     	; 0xf14 <vfprintf+0x372>
     ee6:	a1 fc       	sbrc	r10, 1
     ee8:	03 c0       	rjmp	.+6      	; 0xef0 <vfprintf+0x34e>
     eea:	88 e7       	ldi	r24, 0x78	; 120
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <vfprintf+0x352>
     ef0:	88 e5       	ldi	r24, 0x58	; 88
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	b6 01       	movw	r22, r12
     ef6:	0c c0       	rjmp	.+24     	; 0xf10 <vfprintf+0x36e>
     ef8:	8a 2d       	mov	r24, r10
     efa:	86 78       	andi	r24, 0x86	; 134
     efc:	59 f0       	breq	.+22     	; 0xf14 <vfprintf+0x372>
     efe:	a1 fe       	sbrs	r10, 1
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <vfprintf+0x364>
     f02:	8b e2       	ldi	r24, 0x2B	; 43
     f04:	01 c0       	rjmp	.+2      	; 0xf08 <vfprintf+0x366>
     f06:	80 e2       	ldi	r24, 0x20	; 32
     f08:	a7 fc       	sbrc	r10, 7
     f0a:	8d e2       	ldi	r24, 0x2D	; 45
     f0c:	b6 01       	movw	r22, r12
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     f14:	89 14       	cp	r8, r9
     f16:	38 f4       	brcc	.+14     	; 0xf26 <vfprintf+0x384>
     f18:	b6 01       	movw	r22, r12
     f1a:	80 e3       	ldi	r24, 0x30	; 48
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     f22:	9a 94       	dec	r9
     f24:	f7 cf       	rjmp	.-18     	; 0xf14 <vfprintf+0x372>
     f26:	8a 94       	dec	r8
     f28:	f3 01       	movw	r30, r6
     f2a:	e8 0d       	add	r30, r8
     f2c:	f1 1d       	adc	r31, r1
     f2e:	80 81       	ld	r24, Z
     f30:	b6 01       	movw	r22, r12
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     f38:	81 10       	cpse	r8, r1
     f3a:	f5 cf       	rjmp	.-22     	; 0xf26 <vfprintf+0x384>
     f3c:	22 20       	and	r2, r2
     f3e:	09 f4       	brne	.+2      	; 0xf42 <vfprintf+0x3a0>
     f40:	42 ce       	rjmp	.-892    	; 0xbc6 <vfprintf+0x24>
     f42:	b6 01       	movw	r22, r12
     f44:	80 e2       	ldi	r24, 0x20	; 32
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <fputc>
     f4c:	2a 94       	dec	r2
     f4e:	f6 cf       	rjmp	.-20     	; 0xf3c <vfprintf+0x39a>
     f50:	f6 01       	movw	r30, r12
     f52:	86 81       	ldd	r24, Z+6	; 0x06
     f54:	97 81       	ldd	r25, Z+7	; 0x07
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <vfprintf+0x3ba>
     f58:	8f ef       	ldi	r24, 0xFF	; 255
     f5a:	9f ef       	ldi	r25, 0xFF	; 255
     f5c:	2b 96       	adiw	r28, 0x0b	; 11
     f5e:	e2 e1       	ldi	r30, 0x12	; 18
     f60:	0c 94 b0 0a 	jmp	0x1560	; 0x1560 <__epilogue_restores__>

00000f64 <dtoa_prf>:
     f64:	a9 e0       	ldi	r26, 0x09	; 9
     f66:	b0 e0       	ldi	r27, 0x00	; 0
     f68:	e8 eb       	ldi	r30, 0xB8	; 184
     f6a:	f7 e0       	ldi	r31, 0x07	; 7
     f6c:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__prologue_saves__+0xc>
     f70:	6a 01       	movw	r12, r20
     f72:	12 2f       	mov	r17, r18
     f74:	b0 2e       	mov	r11, r16
     f76:	2b e3       	ldi	r18, 0x3B	; 59
     f78:	20 17       	cp	r18, r16
     f7a:	20 f0       	brcs	.+8      	; 0xf84 <dtoa_prf+0x20>
     f7c:	ff 24       	eor	r15, r15
     f7e:	f3 94       	inc	r15
     f80:	f0 0e       	add	r15, r16
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <dtoa_prf+0x24>
     f84:	2c e3       	ldi	r18, 0x3C	; 60
     f86:	f2 2e       	mov	r15, r18
     f88:	0f 2d       	mov	r16, r15
     f8a:	27 e0       	ldi	r18, 0x07	; 7
     f8c:	ae 01       	movw	r20, r28
     f8e:	4f 5f       	subi	r20, 0xFF	; 255
     f90:	5f 4f       	sbci	r21, 0xFF	; 255
     f92:	0e 94 0c 09 	call	0x1218	; 0x1218 <__ftoa_engine>
     f96:	bc 01       	movw	r22, r24
     f98:	49 81       	ldd	r20, Y+1	; 0x01
     f9a:	84 2f       	mov	r24, r20
     f9c:	89 70       	andi	r24, 0x09	; 9
     f9e:	81 30       	cpi	r24, 0x01	; 1
     fa0:	31 f0       	breq	.+12     	; 0xfae <dtoa_prf+0x4a>
     fa2:	e1 fc       	sbrc	r14, 1
     fa4:	06 c0       	rjmp	.+12     	; 0xfb2 <dtoa_prf+0x4e>
     fa6:	e0 fe       	sbrs	r14, 0
     fa8:	06 c0       	rjmp	.+12     	; 0xfb6 <dtoa_prf+0x52>
     faa:	90 e2       	ldi	r25, 0x20	; 32
     fac:	05 c0       	rjmp	.+10     	; 0xfb8 <dtoa_prf+0x54>
     fae:	9d e2       	ldi	r25, 0x2D	; 45
     fb0:	03 c0       	rjmp	.+6      	; 0xfb8 <dtoa_prf+0x54>
     fb2:	9b e2       	ldi	r25, 0x2B	; 43
     fb4:	01 c0       	rjmp	.+2      	; 0xfb8 <dtoa_prf+0x54>
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	5e 2d       	mov	r21, r14
     fba:	50 71       	andi	r21, 0x10	; 16
     fbc:	43 ff       	sbrs	r20, 3
     fbe:	3c c0       	rjmp	.+120    	; 0x1038 <dtoa_prf+0xd4>
     fc0:	91 11       	cpse	r25, r1
     fc2:	02 c0       	rjmp	.+4      	; 0xfc8 <dtoa_prf+0x64>
     fc4:	83 e0       	ldi	r24, 0x03	; 3
     fc6:	01 c0       	rjmp	.+2      	; 0xfca <dtoa_prf+0x66>
     fc8:	84 e0       	ldi	r24, 0x04	; 4
     fca:	81 17       	cp	r24, r17
     fcc:	18 f4       	brcc	.+6      	; 0xfd4 <dtoa_prf+0x70>
     fce:	21 2f       	mov	r18, r17
     fd0:	28 1b       	sub	r18, r24
     fd2:	01 c0       	rjmp	.+2      	; 0xfd6 <dtoa_prf+0x72>
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	51 11       	cpse	r21, r1
     fd8:	0b c0       	rjmp	.+22     	; 0xff0 <dtoa_prf+0x8c>
     fda:	f6 01       	movw	r30, r12
     fdc:	82 2f       	mov	r24, r18
     fde:	30 e2       	ldi	r19, 0x20	; 32
     fe0:	88 23       	and	r24, r24
     fe2:	19 f0       	breq	.+6      	; 0xfea <dtoa_prf+0x86>
     fe4:	31 93       	st	Z+, r19
     fe6:	81 50       	subi	r24, 0x01	; 1
     fe8:	fb cf       	rjmp	.-10     	; 0xfe0 <dtoa_prf+0x7c>
     fea:	c2 0e       	add	r12, r18
     fec:	d1 1c       	adc	r13, r1
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	99 23       	and	r25, r25
     ff2:	29 f0       	breq	.+10     	; 0xffe <dtoa_prf+0x9a>
     ff4:	d6 01       	movw	r26, r12
     ff6:	9c 93       	st	X, r25
     ff8:	f6 01       	movw	r30, r12
     ffa:	31 96       	adiw	r30, 0x01	; 1
     ffc:	6f 01       	movw	r12, r30
     ffe:	c6 01       	movw	r24, r12
    1000:	03 96       	adiw	r24, 0x03	; 3
    1002:	e2 fe       	sbrs	r14, 2
    1004:	0a c0       	rjmp	.+20     	; 0x101a <dtoa_prf+0xb6>
    1006:	3e e4       	ldi	r19, 0x4E	; 78
    1008:	d6 01       	movw	r26, r12
    100a:	3c 93       	st	X, r19
    100c:	41 e4       	ldi	r20, 0x41	; 65
    100e:	11 96       	adiw	r26, 0x01	; 1
    1010:	4c 93       	st	X, r20
    1012:	11 97       	sbiw	r26, 0x01	; 1
    1014:	12 96       	adiw	r26, 0x02	; 2
    1016:	3c 93       	st	X, r19
    1018:	06 c0       	rjmp	.+12     	; 0x1026 <dtoa_prf+0xc2>
    101a:	3e e6       	ldi	r19, 0x6E	; 110
    101c:	f6 01       	movw	r30, r12
    101e:	30 83       	st	Z, r19
    1020:	41 e6       	ldi	r20, 0x61	; 97
    1022:	41 83       	std	Z+1, r20	; 0x01
    1024:	32 83       	std	Z+2, r19	; 0x02
    1026:	fc 01       	movw	r30, r24
    1028:	32 2f       	mov	r19, r18
    102a:	40 e2       	ldi	r20, 0x20	; 32
    102c:	33 23       	and	r19, r19
    102e:	09 f4       	brne	.+2      	; 0x1032 <dtoa_prf+0xce>
    1030:	42 c0       	rjmp	.+132    	; 0x10b6 <dtoa_prf+0x152>
    1032:	41 93       	st	Z+, r20
    1034:	31 50       	subi	r19, 0x01	; 1
    1036:	fa cf       	rjmp	.-12     	; 0x102c <dtoa_prf+0xc8>
    1038:	42 ff       	sbrs	r20, 2
    103a:	44 c0       	rjmp	.+136    	; 0x10c4 <dtoa_prf+0x160>
    103c:	91 11       	cpse	r25, r1
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <dtoa_prf+0xe0>
    1040:	83 e0       	ldi	r24, 0x03	; 3
    1042:	01 c0       	rjmp	.+2      	; 0x1046 <dtoa_prf+0xe2>
    1044:	84 e0       	ldi	r24, 0x04	; 4
    1046:	81 17       	cp	r24, r17
    1048:	18 f4       	brcc	.+6      	; 0x1050 <dtoa_prf+0xec>
    104a:	21 2f       	mov	r18, r17
    104c:	28 1b       	sub	r18, r24
    104e:	01 c0       	rjmp	.+2      	; 0x1052 <dtoa_prf+0xee>
    1050:	20 e0       	ldi	r18, 0x00	; 0
    1052:	51 11       	cpse	r21, r1
    1054:	0b c0       	rjmp	.+22     	; 0x106c <dtoa_prf+0x108>
    1056:	f6 01       	movw	r30, r12
    1058:	82 2f       	mov	r24, r18
    105a:	30 e2       	ldi	r19, 0x20	; 32
    105c:	88 23       	and	r24, r24
    105e:	19 f0       	breq	.+6      	; 0x1066 <dtoa_prf+0x102>
    1060:	31 93       	st	Z+, r19
    1062:	81 50       	subi	r24, 0x01	; 1
    1064:	fb cf       	rjmp	.-10     	; 0x105c <dtoa_prf+0xf8>
    1066:	c2 0e       	add	r12, r18
    1068:	d1 1c       	adc	r13, r1
    106a:	20 e0       	ldi	r18, 0x00	; 0
    106c:	99 23       	and	r25, r25
    106e:	29 f0       	breq	.+10     	; 0x107a <dtoa_prf+0x116>
    1070:	d6 01       	movw	r26, r12
    1072:	9c 93       	st	X, r25
    1074:	f6 01       	movw	r30, r12
    1076:	31 96       	adiw	r30, 0x01	; 1
    1078:	6f 01       	movw	r12, r30
    107a:	c6 01       	movw	r24, r12
    107c:	03 96       	adiw	r24, 0x03	; 3
    107e:	e2 fe       	sbrs	r14, 2
    1080:	0b c0       	rjmp	.+22     	; 0x1098 <dtoa_prf+0x134>
    1082:	39 e4       	ldi	r19, 0x49	; 73
    1084:	d6 01       	movw	r26, r12
    1086:	3c 93       	st	X, r19
    1088:	3e e4       	ldi	r19, 0x4E	; 78
    108a:	11 96       	adiw	r26, 0x01	; 1
    108c:	3c 93       	st	X, r19
    108e:	11 97       	sbiw	r26, 0x01	; 1
    1090:	36 e4       	ldi	r19, 0x46	; 70
    1092:	12 96       	adiw	r26, 0x02	; 2
    1094:	3c 93       	st	X, r19
    1096:	07 c0       	rjmp	.+14     	; 0x10a6 <dtoa_prf+0x142>
    1098:	39 e6       	ldi	r19, 0x69	; 105
    109a:	f6 01       	movw	r30, r12
    109c:	30 83       	st	Z, r19
    109e:	3e e6       	ldi	r19, 0x6E	; 110
    10a0:	31 83       	std	Z+1, r19	; 0x01
    10a2:	36 e6       	ldi	r19, 0x66	; 102
    10a4:	32 83       	std	Z+2, r19	; 0x02
    10a6:	fc 01       	movw	r30, r24
    10a8:	32 2f       	mov	r19, r18
    10aa:	40 e2       	ldi	r20, 0x20	; 32
    10ac:	33 23       	and	r19, r19
    10ae:	19 f0       	breq	.+6      	; 0x10b6 <dtoa_prf+0x152>
    10b0:	41 93       	st	Z+, r20
    10b2:	31 50       	subi	r19, 0x01	; 1
    10b4:	fb cf       	rjmp	.-10     	; 0x10ac <dtoa_prf+0x148>
    10b6:	fc 01       	movw	r30, r24
    10b8:	e2 0f       	add	r30, r18
    10ba:	f1 1d       	adc	r31, r1
    10bc:	10 82       	st	Z, r1
    10be:	8e ef       	ldi	r24, 0xFE	; 254
    10c0:	9f ef       	ldi	r25, 0xFF	; 255
    10c2:	a6 c0       	rjmp	.+332    	; 0x1210 <dtoa_prf+0x2ac>
    10c4:	21 e0       	ldi	r18, 0x01	; 1
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	91 11       	cpse	r25, r1
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <dtoa_prf+0x16c>
    10cc:	20 e0       	ldi	r18, 0x00	; 0
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	16 16       	cp	r1, r22
    10d2:	17 06       	cpc	r1, r23
    10d4:	1c f4       	brge	.+6      	; 0x10dc <dtoa_prf+0x178>
    10d6:	fb 01       	movw	r30, r22
    10d8:	31 96       	adiw	r30, 0x01	; 1
    10da:	02 c0       	rjmp	.+4      	; 0x10e0 <dtoa_prf+0x17c>
    10dc:	e1 e0       	ldi	r30, 0x01	; 1
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	2e 0f       	add	r18, r30
    10e2:	3f 1f       	adc	r19, r31
    10e4:	bb 20       	and	r11, r11
    10e6:	21 f0       	breq	.+8      	; 0x10f0 <dtoa_prf+0x18c>
    10e8:	eb 2d       	mov	r30, r11
    10ea:	f0 e0       	ldi	r31, 0x00	; 0
    10ec:	31 96       	adiw	r30, 0x01	; 1
    10ee:	02 c0       	rjmp	.+4      	; 0x10f4 <dtoa_prf+0x190>
    10f0:	e0 e0       	ldi	r30, 0x00	; 0
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	2e 0f       	add	r18, r30
    10f6:	3f 1f       	adc	r19, r31
    10f8:	e1 2f       	mov	r30, r17
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	2e 17       	cp	r18, r30
    10fe:	3f 07       	cpc	r19, r31
    1100:	1c f4       	brge	.+6      	; 0x1108 <dtoa_prf+0x1a4>
    1102:	12 1b       	sub	r17, r18
    1104:	21 2f       	mov	r18, r17
    1106:	01 c0       	rjmp	.+2      	; 0x110a <dtoa_prf+0x1a6>
    1108:	20 e0       	ldi	r18, 0x00	; 0
    110a:	8e 2d       	mov	r24, r14
    110c:	88 71       	andi	r24, 0x18	; 24
    110e:	59 f4       	brne	.+22     	; 0x1126 <dtoa_prf+0x1c2>
    1110:	f6 01       	movw	r30, r12
    1112:	82 2f       	mov	r24, r18
    1114:	30 e2       	ldi	r19, 0x20	; 32
    1116:	88 23       	and	r24, r24
    1118:	19 f0       	breq	.+6      	; 0x1120 <dtoa_prf+0x1bc>
    111a:	31 93       	st	Z+, r19
    111c:	81 50       	subi	r24, 0x01	; 1
    111e:	fb cf       	rjmp	.-10     	; 0x1116 <dtoa_prf+0x1b2>
    1120:	c2 0e       	add	r12, r18
    1122:	d1 1c       	adc	r13, r1
    1124:	20 e0       	ldi	r18, 0x00	; 0
    1126:	99 23       	and	r25, r25
    1128:	29 f0       	breq	.+10     	; 0x1134 <dtoa_prf+0x1d0>
    112a:	d6 01       	movw	r26, r12
    112c:	9c 93       	st	X, r25
    112e:	f6 01       	movw	r30, r12
    1130:	31 96       	adiw	r30, 0x01	; 1
    1132:	6f 01       	movw	r12, r30
    1134:	51 11       	cpse	r21, r1
    1136:	0b c0       	rjmp	.+22     	; 0x114e <dtoa_prf+0x1ea>
    1138:	f6 01       	movw	r30, r12
    113a:	82 2f       	mov	r24, r18
    113c:	90 e3       	ldi	r25, 0x30	; 48
    113e:	88 23       	and	r24, r24
    1140:	19 f0       	breq	.+6      	; 0x1148 <dtoa_prf+0x1e4>
    1142:	91 93       	st	Z+, r25
    1144:	81 50       	subi	r24, 0x01	; 1
    1146:	fb cf       	rjmp	.-10     	; 0x113e <dtoa_prf+0x1da>
    1148:	c2 0e       	add	r12, r18
    114a:	d1 1c       	adc	r13, r1
    114c:	20 e0       	ldi	r18, 0x00	; 0
    114e:	0f 2d       	mov	r16, r15
    1150:	06 0f       	add	r16, r22
    1152:	9a 81       	ldd	r25, Y+2	; 0x02
    1154:	34 2f       	mov	r19, r20
    1156:	30 71       	andi	r19, 0x10	; 16
    1158:	44 ff       	sbrs	r20, 4
    115a:	03 c0       	rjmp	.+6      	; 0x1162 <dtoa_prf+0x1fe>
    115c:	91 33       	cpi	r25, 0x31	; 49
    115e:	09 f4       	brne	.+2      	; 0x1162 <dtoa_prf+0x1fe>
    1160:	01 50       	subi	r16, 0x01	; 1
    1162:	10 16       	cp	r1, r16
    1164:	24 f4       	brge	.+8      	; 0x116e <dtoa_prf+0x20a>
    1166:	09 30       	cpi	r16, 0x09	; 9
    1168:	18 f0       	brcs	.+6      	; 0x1170 <dtoa_prf+0x20c>
    116a:	08 e0       	ldi	r16, 0x08	; 8
    116c:	01 c0       	rjmp	.+2      	; 0x1170 <dtoa_prf+0x20c>
    116e:	01 e0       	ldi	r16, 0x01	; 1
    1170:	ab 01       	movw	r20, r22
    1172:	77 ff       	sbrs	r23, 7
    1174:	02 c0       	rjmp	.+4      	; 0x117a <dtoa_prf+0x216>
    1176:	40 e0       	ldi	r20, 0x00	; 0
    1178:	50 e0       	ldi	r21, 0x00	; 0
    117a:	fb 01       	movw	r30, r22
    117c:	e4 1b       	sub	r30, r20
    117e:	f5 0b       	sbc	r31, r21
    1180:	a1 e0       	ldi	r26, 0x01	; 1
    1182:	b0 e0       	ldi	r27, 0x00	; 0
    1184:	ac 0f       	add	r26, r28
    1186:	bd 1f       	adc	r27, r29
    1188:	ea 0f       	add	r30, r26
    118a:	fb 1f       	adc	r31, r27
    118c:	8e e2       	ldi	r24, 0x2E	; 46
    118e:	a8 2e       	mov	r10, r24
    1190:	4b 01       	movw	r8, r22
    1192:	80 1a       	sub	r8, r16
    1194:	91 08       	sbc	r9, r1
    1196:	0b 2d       	mov	r16, r11
    1198:	10 e0       	ldi	r17, 0x00	; 0
    119a:	11 95       	neg	r17
    119c:	01 95       	neg	r16
    119e:	11 09       	sbc	r17, r1
    11a0:	4f 3f       	cpi	r20, 0xFF	; 255
    11a2:	bf ef       	ldi	r27, 0xFF	; 255
    11a4:	5b 07       	cpc	r21, r27
    11a6:	21 f4       	brne	.+8      	; 0x11b0 <dtoa_prf+0x24c>
    11a8:	d6 01       	movw	r26, r12
    11aa:	ac 92       	st	X, r10
    11ac:	11 96       	adiw	r26, 0x01	; 1
    11ae:	6d 01       	movw	r12, r26
    11b0:	64 17       	cp	r22, r20
    11b2:	75 07       	cpc	r23, r21
    11b4:	2c f0       	brlt	.+10     	; 0x11c0 <dtoa_prf+0x25c>
    11b6:	84 16       	cp	r8, r20
    11b8:	95 06       	cpc	r9, r21
    11ba:	14 f4       	brge	.+4      	; 0x11c0 <dtoa_prf+0x25c>
    11bc:	81 81       	ldd	r24, Z+1	; 0x01
    11be:	01 c0       	rjmp	.+2      	; 0x11c2 <dtoa_prf+0x25e>
    11c0:	80 e3       	ldi	r24, 0x30	; 48
    11c2:	41 50       	subi	r20, 0x01	; 1
    11c4:	51 09       	sbc	r21, r1
    11c6:	31 96       	adiw	r30, 0x01	; 1
    11c8:	d6 01       	movw	r26, r12
    11ca:	11 96       	adiw	r26, 0x01	; 1
    11cc:	7d 01       	movw	r14, r26
    11ce:	40 17       	cp	r20, r16
    11d0:	51 07       	cpc	r21, r17
    11d2:	24 f0       	brlt	.+8      	; 0x11dc <dtoa_prf+0x278>
    11d4:	d6 01       	movw	r26, r12
    11d6:	8c 93       	st	X, r24
    11d8:	67 01       	movw	r12, r14
    11da:	e2 cf       	rjmp	.-60     	; 0x11a0 <dtoa_prf+0x23c>
    11dc:	64 17       	cp	r22, r20
    11de:	75 07       	cpc	r23, r21
    11e0:	39 f4       	brne	.+14     	; 0x11f0 <dtoa_prf+0x28c>
    11e2:	96 33       	cpi	r25, 0x36	; 54
    11e4:	20 f4       	brcc	.+8      	; 0x11ee <dtoa_prf+0x28a>
    11e6:	95 33       	cpi	r25, 0x35	; 53
    11e8:	19 f4       	brne	.+6      	; 0x11f0 <dtoa_prf+0x28c>
    11ea:	31 11       	cpse	r19, r1
    11ec:	01 c0       	rjmp	.+2      	; 0x11f0 <dtoa_prf+0x28c>
    11ee:	81 e3       	ldi	r24, 0x31	; 49
    11f0:	f6 01       	movw	r30, r12
    11f2:	80 83       	st	Z, r24
    11f4:	f7 01       	movw	r30, r14
    11f6:	82 2f       	mov	r24, r18
    11f8:	90 e2       	ldi	r25, 0x20	; 32
    11fa:	88 23       	and	r24, r24
    11fc:	19 f0       	breq	.+6      	; 0x1204 <dtoa_prf+0x2a0>
    11fe:	91 93       	st	Z+, r25
    1200:	81 50       	subi	r24, 0x01	; 1
    1202:	fb cf       	rjmp	.-10     	; 0x11fa <dtoa_prf+0x296>
    1204:	f7 01       	movw	r30, r14
    1206:	e2 0f       	add	r30, r18
    1208:	f1 1d       	adc	r31, r1
    120a:	10 82       	st	Z, r1
    120c:	80 e0       	ldi	r24, 0x00	; 0
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	29 96       	adiw	r28, 0x09	; 9
    1212:	ec e0       	ldi	r30, 0x0C	; 12
    1214:	0c 94 b6 0a 	jmp	0x156c	; 0x156c <__epilogue_restores__+0xc>

00001218 <__ftoa_engine>:
    1218:	28 30       	cpi	r18, 0x08	; 8
    121a:	08 f0       	brcs	.+2      	; 0x121e <__ftoa_engine+0x6>
    121c:	27 e0       	ldi	r18, 0x07	; 7
    121e:	33 27       	eor	r19, r19
    1220:	da 01       	movw	r26, r20
    1222:	99 0f       	add	r25, r25
    1224:	31 1d       	adc	r19, r1
    1226:	87 fd       	sbrc	r24, 7
    1228:	91 60       	ori	r25, 0x01	; 1
    122a:	00 96       	adiw	r24, 0x00	; 0
    122c:	61 05       	cpc	r22, r1
    122e:	71 05       	cpc	r23, r1
    1230:	39 f4       	brne	.+14     	; 0x1240 <__ftoa_engine+0x28>
    1232:	32 60       	ori	r19, 0x02	; 2
    1234:	2e 5f       	subi	r18, 0xFE	; 254
    1236:	3d 93       	st	X+, r19
    1238:	30 e3       	ldi	r19, 0x30	; 48
    123a:	2a 95       	dec	r18
    123c:	e1 f7       	brne	.-8      	; 0x1236 <__ftoa_engine+0x1e>
    123e:	08 95       	ret
    1240:	9f 3f       	cpi	r25, 0xFF	; 255
    1242:	30 f0       	brcs	.+12     	; 0x1250 <__ftoa_engine+0x38>
    1244:	80 38       	cpi	r24, 0x80	; 128
    1246:	71 05       	cpc	r23, r1
    1248:	61 05       	cpc	r22, r1
    124a:	09 f0       	breq	.+2      	; 0x124e <__ftoa_engine+0x36>
    124c:	3c 5f       	subi	r19, 0xFC	; 252
    124e:	3c 5f       	subi	r19, 0xFC	; 252
    1250:	3d 93       	st	X+, r19
    1252:	91 30       	cpi	r25, 0x01	; 1
    1254:	08 f0       	brcs	.+2      	; 0x1258 <__ftoa_engine+0x40>
    1256:	80 68       	ori	r24, 0x80	; 128
    1258:	91 1d       	adc	r25, r1
    125a:	df 93       	push	r29
    125c:	cf 93       	push	r28
    125e:	1f 93       	push	r17
    1260:	0f 93       	push	r16
    1262:	ff 92       	push	r15
    1264:	ef 92       	push	r14
    1266:	19 2f       	mov	r17, r25
    1268:	98 7f       	andi	r25, 0xF8	; 248
    126a:	96 95       	lsr	r25
    126c:	e9 2f       	mov	r30, r25
    126e:	96 95       	lsr	r25
    1270:	96 95       	lsr	r25
    1272:	e9 0f       	add	r30, r25
    1274:	ff 27       	eor	r31, r31
    1276:	e2 55       	subi	r30, 0x52	; 82
    1278:	ff 4f       	sbci	r31, 0xFF	; 255
    127a:	99 27       	eor	r25, r25
    127c:	33 27       	eor	r19, r19
    127e:	ee 24       	eor	r14, r14
    1280:	ff 24       	eor	r15, r15
    1282:	a7 01       	movw	r20, r14
    1284:	e7 01       	movw	r28, r14
    1286:	05 90       	lpm	r0, Z+
    1288:	08 94       	sec
    128a:	07 94       	ror	r0
    128c:	28 f4       	brcc	.+10     	; 0x1298 <__ftoa_engine+0x80>
    128e:	36 0f       	add	r19, r22
    1290:	e7 1e       	adc	r14, r23
    1292:	f8 1e       	adc	r15, r24
    1294:	49 1f       	adc	r20, r25
    1296:	51 1d       	adc	r21, r1
    1298:	66 0f       	add	r22, r22
    129a:	77 1f       	adc	r23, r23
    129c:	88 1f       	adc	r24, r24
    129e:	99 1f       	adc	r25, r25
    12a0:	06 94       	lsr	r0
    12a2:	a1 f7       	brne	.-24     	; 0x128c <__ftoa_engine+0x74>
    12a4:	05 90       	lpm	r0, Z+
    12a6:	07 94       	ror	r0
    12a8:	28 f4       	brcc	.+10     	; 0x12b4 <__ftoa_engine+0x9c>
    12aa:	e7 0e       	add	r14, r23
    12ac:	f8 1e       	adc	r15, r24
    12ae:	49 1f       	adc	r20, r25
    12b0:	56 1f       	adc	r21, r22
    12b2:	c1 1d       	adc	r28, r1
    12b4:	77 0f       	add	r23, r23
    12b6:	88 1f       	adc	r24, r24
    12b8:	99 1f       	adc	r25, r25
    12ba:	66 1f       	adc	r22, r22
    12bc:	06 94       	lsr	r0
    12be:	a1 f7       	brne	.-24     	; 0x12a8 <__ftoa_engine+0x90>
    12c0:	05 90       	lpm	r0, Z+
    12c2:	07 94       	ror	r0
    12c4:	28 f4       	brcc	.+10     	; 0x12d0 <__ftoa_engine+0xb8>
    12c6:	f8 0e       	add	r15, r24
    12c8:	49 1f       	adc	r20, r25
    12ca:	56 1f       	adc	r21, r22
    12cc:	c7 1f       	adc	r28, r23
    12ce:	d1 1d       	adc	r29, r1
    12d0:	88 0f       	add	r24, r24
    12d2:	99 1f       	adc	r25, r25
    12d4:	66 1f       	adc	r22, r22
    12d6:	77 1f       	adc	r23, r23
    12d8:	06 94       	lsr	r0
    12da:	a1 f7       	brne	.-24     	; 0x12c4 <__ftoa_engine+0xac>
    12dc:	05 90       	lpm	r0, Z+
    12de:	07 94       	ror	r0
    12e0:	20 f4       	brcc	.+8      	; 0x12ea <__ftoa_engine+0xd2>
    12e2:	49 0f       	add	r20, r25
    12e4:	56 1f       	adc	r21, r22
    12e6:	c7 1f       	adc	r28, r23
    12e8:	d8 1f       	adc	r29, r24
    12ea:	99 0f       	add	r25, r25
    12ec:	66 1f       	adc	r22, r22
    12ee:	77 1f       	adc	r23, r23
    12f0:	88 1f       	adc	r24, r24
    12f2:	06 94       	lsr	r0
    12f4:	a9 f7       	brne	.-22     	; 0x12e0 <__ftoa_engine+0xc8>
    12f6:	84 91       	lpm	r24, Z
    12f8:	10 95       	com	r17
    12fa:	17 70       	andi	r17, 0x07	; 7
    12fc:	41 f0       	breq	.+16     	; 0x130e <__ftoa_engine+0xf6>
    12fe:	d6 95       	lsr	r29
    1300:	c7 95       	ror	r28
    1302:	57 95       	ror	r21
    1304:	47 95       	ror	r20
    1306:	f7 94       	ror	r15
    1308:	e7 94       	ror	r14
    130a:	1a 95       	dec	r17
    130c:	c1 f7       	brne	.-16     	; 0x12fe <__ftoa_engine+0xe6>
    130e:	e4 e5       	ldi	r30, 0x54	; 84
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	68 94       	set
    1314:	15 90       	lpm	r1, Z+
    1316:	15 91       	lpm	r17, Z+
    1318:	35 91       	lpm	r19, Z+
    131a:	65 91       	lpm	r22, Z+
    131c:	95 91       	lpm	r25, Z+
    131e:	05 90       	lpm	r0, Z+
    1320:	7f e2       	ldi	r23, 0x2F	; 47
    1322:	73 95       	inc	r23
    1324:	e1 18       	sub	r14, r1
    1326:	f1 0a       	sbc	r15, r17
    1328:	43 0b       	sbc	r20, r19
    132a:	56 0b       	sbc	r21, r22
    132c:	c9 0b       	sbc	r28, r25
    132e:	d0 09       	sbc	r29, r0
    1330:	c0 f7       	brcc	.-16     	; 0x1322 <__ftoa_engine+0x10a>
    1332:	e1 0c       	add	r14, r1
    1334:	f1 1e       	adc	r15, r17
    1336:	43 1f       	adc	r20, r19
    1338:	56 1f       	adc	r21, r22
    133a:	c9 1f       	adc	r28, r25
    133c:	d0 1d       	adc	r29, r0
    133e:	7e f4       	brtc	.+30     	; 0x135e <__ftoa_engine+0x146>
    1340:	70 33       	cpi	r23, 0x30	; 48
    1342:	11 f4       	brne	.+4      	; 0x1348 <__ftoa_engine+0x130>
    1344:	8a 95       	dec	r24
    1346:	e6 cf       	rjmp	.-52     	; 0x1314 <__ftoa_engine+0xfc>
    1348:	e8 94       	clt
    134a:	01 50       	subi	r16, 0x01	; 1
    134c:	30 f0       	brcs	.+12     	; 0x135a <__ftoa_engine+0x142>
    134e:	08 0f       	add	r16, r24
    1350:	0a f4       	brpl	.+2      	; 0x1354 <__ftoa_engine+0x13c>
    1352:	00 27       	eor	r16, r16
    1354:	02 17       	cp	r16, r18
    1356:	08 f4       	brcc	.+2      	; 0x135a <__ftoa_engine+0x142>
    1358:	20 2f       	mov	r18, r16
    135a:	23 95       	inc	r18
    135c:	02 2f       	mov	r16, r18
    135e:	7a 33       	cpi	r23, 0x3A	; 58
    1360:	28 f0       	brcs	.+10     	; 0x136c <__ftoa_engine+0x154>
    1362:	79 e3       	ldi	r23, 0x39	; 57
    1364:	7d 93       	st	X+, r23
    1366:	2a 95       	dec	r18
    1368:	e9 f7       	brne	.-6      	; 0x1364 <__ftoa_engine+0x14c>
    136a:	10 c0       	rjmp	.+32     	; 0x138c <__ftoa_engine+0x174>
    136c:	7d 93       	st	X+, r23
    136e:	2a 95       	dec	r18
    1370:	89 f6       	brne	.-94     	; 0x1314 <__ftoa_engine+0xfc>
    1372:	06 94       	lsr	r0
    1374:	97 95       	ror	r25
    1376:	67 95       	ror	r22
    1378:	37 95       	ror	r19
    137a:	17 95       	ror	r17
    137c:	17 94       	ror	r1
    137e:	e1 18       	sub	r14, r1
    1380:	f1 0a       	sbc	r15, r17
    1382:	43 0b       	sbc	r20, r19
    1384:	56 0b       	sbc	r21, r22
    1386:	c9 0b       	sbc	r28, r25
    1388:	d0 09       	sbc	r29, r0
    138a:	98 f0       	brcs	.+38     	; 0x13b2 <__ftoa_engine+0x19a>
    138c:	23 95       	inc	r18
    138e:	7e 91       	ld	r23, -X
    1390:	73 95       	inc	r23
    1392:	7a 33       	cpi	r23, 0x3A	; 58
    1394:	08 f0       	brcs	.+2      	; 0x1398 <__ftoa_engine+0x180>
    1396:	70 e3       	ldi	r23, 0x30	; 48
    1398:	7c 93       	st	X, r23
    139a:	20 13       	cpse	r18, r16
    139c:	b8 f7       	brcc	.-18     	; 0x138c <__ftoa_engine+0x174>
    139e:	7e 91       	ld	r23, -X
    13a0:	70 61       	ori	r23, 0x10	; 16
    13a2:	7d 93       	st	X+, r23
    13a4:	30 f0       	brcs	.+12     	; 0x13b2 <__ftoa_engine+0x19a>
    13a6:	83 95       	inc	r24
    13a8:	71 e3       	ldi	r23, 0x31	; 49
    13aa:	7d 93       	st	X+, r23
    13ac:	70 e3       	ldi	r23, 0x30	; 48
    13ae:	2a 95       	dec	r18
    13b0:	e1 f7       	brne	.-8      	; 0x13aa <__ftoa_engine+0x192>
    13b2:	11 24       	eor	r1, r1
    13b4:	ef 90       	pop	r14
    13b6:	ff 90       	pop	r15
    13b8:	0f 91       	pop	r16
    13ba:	1f 91       	pop	r17
    13bc:	cf 91       	pop	r28
    13be:	df 91       	pop	r29
    13c0:	99 27       	eor	r25, r25
    13c2:	87 fd       	sbrc	r24, 7
    13c4:	90 95       	com	r25
    13c6:	08 95       	ret

000013c8 <strnlen_P>:
    13c8:	fc 01       	movw	r30, r24
    13ca:	05 90       	lpm	r0, Z+
    13cc:	61 50       	subi	r22, 0x01	; 1
    13ce:	70 40       	sbci	r23, 0x00	; 0
    13d0:	01 10       	cpse	r0, r1
    13d2:	d8 f7       	brcc	.-10     	; 0x13ca <strnlen_P+0x2>
    13d4:	80 95       	com	r24
    13d6:	90 95       	com	r25
    13d8:	8e 0f       	add	r24, r30
    13da:	9f 1f       	adc	r25, r31
    13dc:	08 95       	ret

000013de <strnlen>:
    13de:	fc 01       	movw	r30, r24
    13e0:	61 50       	subi	r22, 0x01	; 1
    13e2:	70 40       	sbci	r23, 0x00	; 0
    13e4:	01 90       	ld	r0, Z+
    13e6:	01 10       	cpse	r0, r1
    13e8:	d8 f7       	brcc	.-10     	; 0x13e0 <strnlen+0x2>
    13ea:	80 95       	com	r24
    13ec:	90 95       	com	r25
    13ee:	8e 0f       	add	r24, r30
    13f0:	9f 1f       	adc	r25, r31
    13f2:	08 95       	ret

000013f4 <fputc>:
    13f4:	0f 93       	push	r16
    13f6:	1f 93       	push	r17
    13f8:	cf 93       	push	r28
    13fa:	df 93       	push	r29
    13fc:	fb 01       	movw	r30, r22
    13fe:	23 81       	ldd	r18, Z+3	; 0x03
    1400:	21 fd       	sbrc	r18, 1
    1402:	03 c0       	rjmp	.+6      	; 0x140a <fputc+0x16>
    1404:	8f ef       	ldi	r24, 0xFF	; 255
    1406:	9f ef       	ldi	r25, 0xFF	; 255
    1408:	2c c0       	rjmp	.+88     	; 0x1462 <fputc+0x6e>
    140a:	22 ff       	sbrs	r18, 2
    140c:	16 c0       	rjmp	.+44     	; 0x143a <fputc+0x46>
    140e:	46 81       	ldd	r20, Z+6	; 0x06
    1410:	57 81       	ldd	r21, Z+7	; 0x07
    1412:	24 81       	ldd	r18, Z+4	; 0x04
    1414:	35 81       	ldd	r19, Z+5	; 0x05
    1416:	42 17       	cp	r20, r18
    1418:	53 07       	cpc	r21, r19
    141a:	44 f4       	brge	.+16     	; 0x142c <fputc+0x38>
    141c:	a0 81       	ld	r26, Z
    141e:	b1 81       	ldd	r27, Z+1	; 0x01
    1420:	9d 01       	movw	r18, r26
    1422:	2f 5f       	subi	r18, 0xFF	; 255
    1424:	3f 4f       	sbci	r19, 0xFF	; 255
    1426:	31 83       	std	Z+1, r19	; 0x01
    1428:	20 83       	st	Z, r18
    142a:	8c 93       	st	X, r24
    142c:	26 81       	ldd	r18, Z+6	; 0x06
    142e:	37 81       	ldd	r19, Z+7	; 0x07
    1430:	2f 5f       	subi	r18, 0xFF	; 255
    1432:	3f 4f       	sbci	r19, 0xFF	; 255
    1434:	37 83       	std	Z+7, r19	; 0x07
    1436:	26 83       	std	Z+6, r18	; 0x06
    1438:	14 c0       	rjmp	.+40     	; 0x1462 <fputc+0x6e>
    143a:	8b 01       	movw	r16, r22
    143c:	ec 01       	movw	r28, r24
    143e:	fb 01       	movw	r30, r22
    1440:	00 84       	ldd	r0, Z+8	; 0x08
    1442:	f1 85       	ldd	r31, Z+9	; 0x09
    1444:	e0 2d       	mov	r30, r0
    1446:	09 95       	icall
    1448:	89 2b       	or	r24, r25
    144a:	e1 f6       	brne	.-72     	; 0x1404 <fputc+0x10>
    144c:	d8 01       	movw	r26, r16
    144e:	16 96       	adiw	r26, 0x06	; 6
    1450:	8d 91       	ld	r24, X+
    1452:	9c 91       	ld	r25, X
    1454:	17 97       	sbiw	r26, 0x07	; 7
    1456:	01 96       	adiw	r24, 0x01	; 1
    1458:	17 96       	adiw	r26, 0x07	; 7
    145a:	9c 93       	st	X, r25
    145c:	8e 93       	st	-X, r24
    145e:	16 97       	sbiw	r26, 0x06	; 6
    1460:	ce 01       	movw	r24, r28
    1462:	df 91       	pop	r29
    1464:	cf 91       	pop	r28
    1466:	1f 91       	pop	r17
    1468:	0f 91       	pop	r16
    146a:	08 95       	ret

0000146c <__ultoa_invert>:
    146c:	fa 01       	movw	r30, r20
    146e:	aa 27       	eor	r26, r26
    1470:	28 30       	cpi	r18, 0x08	; 8
    1472:	51 f1       	breq	.+84     	; 0x14c8 <__ultoa_invert+0x5c>
    1474:	20 31       	cpi	r18, 0x10	; 16
    1476:	81 f1       	breq	.+96     	; 0x14d8 <__ultoa_invert+0x6c>
    1478:	e8 94       	clt
    147a:	6f 93       	push	r22
    147c:	6e 7f       	andi	r22, 0xFE	; 254
    147e:	6e 5f       	subi	r22, 0xFE	; 254
    1480:	7f 4f       	sbci	r23, 0xFF	; 255
    1482:	8f 4f       	sbci	r24, 0xFF	; 255
    1484:	9f 4f       	sbci	r25, 0xFF	; 255
    1486:	af 4f       	sbci	r26, 0xFF	; 255
    1488:	b1 e0       	ldi	r27, 0x01	; 1
    148a:	3e d0       	rcall	.+124    	; 0x1508 <__ultoa_invert+0x9c>
    148c:	b4 e0       	ldi	r27, 0x04	; 4
    148e:	3c d0       	rcall	.+120    	; 0x1508 <__ultoa_invert+0x9c>
    1490:	67 0f       	add	r22, r23
    1492:	78 1f       	adc	r23, r24
    1494:	89 1f       	adc	r24, r25
    1496:	9a 1f       	adc	r25, r26
    1498:	a1 1d       	adc	r26, r1
    149a:	68 0f       	add	r22, r24
    149c:	79 1f       	adc	r23, r25
    149e:	8a 1f       	adc	r24, r26
    14a0:	91 1d       	adc	r25, r1
    14a2:	a1 1d       	adc	r26, r1
    14a4:	6a 0f       	add	r22, r26
    14a6:	71 1d       	adc	r23, r1
    14a8:	81 1d       	adc	r24, r1
    14aa:	91 1d       	adc	r25, r1
    14ac:	a1 1d       	adc	r26, r1
    14ae:	20 d0       	rcall	.+64     	; 0x14f0 <__ultoa_invert+0x84>
    14b0:	09 f4       	brne	.+2      	; 0x14b4 <__ultoa_invert+0x48>
    14b2:	68 94       	set
    14b4:	3f 91       	pop	r19
    14b6:	2a e0       	ldi	r18, 0x0A	; 10
    14b8:	26 9f       	mul	r18, r22
    14ba:	11 24       	eor	r1, r1
    14bc:	30 19       	sub	r19, r0
    14be:	30 5d       	subi	r19, 0xD0	; 208
    14c0:	31 93       	st	Z+, r19
    14c2:	de f6       	brtc	.-74     	; 0x147a <__ultoa_invert+0xe>
    14c4:	cf 01       	movw	r24, r30
    14c6:	08 95       	ret
    14c8:	46 2f       	mov	r20, r22
    14ca:	47 70       	andi	r20, 0x07	; 7
    14cc:	40 5d       	subi	r20, 0xD0	; 208
    14ce:	41 93       	st	Z+, r20
    14d0:	b3 e0       	ldi	r27, 0x03	; 3
    14d2:	0f d0       	rcall	.+30     	; 0x14f2 <__ultoa_invert+0x86>
    14d4:	c9 f7       	brne	.-14     	; 0x14c8 <__ultoa_invert+0x5c>
    14d6:	f6 cf       	rjmp	.-20     	; 0x14c4 <__ultoa_invert+0x58>
    14d8:	46 2f       	mov	r20, r22
    14da:	4f 70       	andi	r20, 0x0F	; 15
    14dc:	40 5d       	subi	r20, 0xD0	; 208
    14de:	4a 33       	cpi	r20, 0x3A	; 58
    14e0:	18 f0       	brcs	.+6      	; 0x14e8 <__ultoa_invert+0x7c>
    14e2:	49 5d       	subi	r20, 0xD9	; 217
    14e4:	31 fd       	sbrc	r19, 1
    14e6:	40 52       	subi	r20, 0x20	; 32
    14e8:	41 93       	st	Z+, r20
    14ea:	02 d0       	rcall	.+4      	; 0x14f0 <__ultoa_invert+0x84>
    14ec:	a9 f7       	brne	.-22     	; 0x14d8 <__ultoa_invert+0x6c>
    14ee:	ea cf       	rjmp	.-44     	; 0x14c4 <__ultoa_invert+0x58>
    14f0:	b4 e0       	ldi	r27, 0x04	; 4
    14f2:	a6 95       	lsr	r26
    14f4:	97 95       	ror	r25
    14f6:	87 95       	ror	r24
    14f8:	77 95       	ror	r23
    14fa:	67 95       	ror	r22
    14fc:	ba 95       	dec	r27
    14fe:	c9 f7       	brne	.-14     	; 0x14f2 <__ultoa_invert+0x86>
    1500:	00 97       	sbiw	r24, 0x00	; 0
    1502:	61 05       	cpc	r22, r1
    1504:	71 05       	cpc	r23, r1
    1506:	08 95       	ret
    1508:	9b 01       	movw	r18, r22
    150a:	ac 01       	movw	r20, r24
    150c:	0a 2e       	mov	r0, r26
    150e:	06 94       	lsr	r0
    1510:	57 95       	ror	r21
    1512:	47 95       	ror	r20
    1514:	37 95       	ror	r19
    1516:	27 95       	ror	r18
    1518:	ba 95       	dec	r27
    151a:	c9 f7       	brne	.-14     	; 0x150e <__ultoa_invert+0xa2>
    151c:	62 0f       	add	r22, r18
    151e:	73 1f       	adc	r23, r19
    1520:	84 1f       	adc	r24, r20
    1522:	95 1f       	adc	r25, r21
    1524:	a0 1d       	adc	r26, r0
    1526:	08 95       	ret

00001528 <__prologue_saves__>:
    1528:	2f 92       	push	r2
    152a:	3f 92       	push	r3
    152c:	4f 92       	push	r4
    152e:	5f 92       	push	r5
    1530:	6f 92       	push	r6
    1532:	7f 92       	push	r7
    1534:	8f 92       	push	r8
    1536:	9f 92       	push	r9
    1538:	af 92       	push	r10
    153a:	bf 92       	push	r11
    153c:	cf 92       	push	r12
    153e:	df 92       	push	r13
    1540:	ef 92       	push	r14
    1542:	ff 92       	push	r15
    1544:	0f 93       	push	r16
    1546:	1f 93       	push	r17
    1548:	cf 93       	push	r28
    154a:	df 93       	push	r29
    154c:	cd b7       	in	r28, 0x3d	; 61
    154e:	de b7       	in	r29, 0x3e	; 62
    1550:	ca 1b       	sub	r28, r26
    1552:	db 0b       	sbc	r29, r27
    1554:	0f b6       	in	r0, 0x3f	; 63
    1556:	f8 94       	cli
    1558:	de bf       	out	0x3e, r29	; 62
    155a:	0f be       	out	0x3f, r0	; 63
    155c:	cd bf       	out	0x3d, r28	; 61
    155e:	09 94       	ijmp

00001560 <__epilogue_restores__>:
    1560:	2a 88       	ldd	r2, Y+18	; 0x12
    1562:	39 88       	ldd	r3, Y+17	; 0x11
    1564:	48 88       	ldd	r4, Y+16	; 0x10
    1566:	5f 84       	ldd	r5, Y+15	; 0x0f
    1568:	6e 84       	ldd	r6, Y+14	; 0x0e
    156a:	7d 84       	ldd	r7, Y+13	; 0x0d
    156c:	8c 84       	ldd	r8, Y+12	; 0x0c
    156e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1570:	aa 84       	ldd	r10, Y+10	; 0x0a
    1572:	b9 84       	ldd	r11, Y+9	; 0x09
    1574:	c8 84       	ldd	r12, Y+8	; 0x08
    1576:	df 80       	ldd	r13, Y+7	; 0x07
    1578:	ee 80       	ldd	r14, Y+6	; 0x06
    157a:	fd 80       	ldd	r15, Y+5	; 0x05
    157c:	0c 81       	ldd	r16, Y+4	; 0x04
    157e:	1b 81       	ldd	r17, Y+3	; 0x03
    1580:	aa 81       	ldd	r26, Y+2	; 0x02
    1582:	b9 81       	ldd	r27, Y+1	; 0x01
    1584:	ce 0f       	add	r28, r30
    1586:	d1 1d       	adc	r29, r1
    1588:	0f b6       	in	r0, 0x3f	; 63
    158a:	f8 94       	cli
    158c:	de bf       	out	0x3e, r29	; 62
    158e:	0f be       	out	0x3f, r0	; 63
    1590:	cd bf       	out	0x3d, r28	; 61
    1592:	ed 01       	movw	r28, r26
    1594:	08 95       	ret

00001596 <_exit>:
    1596:	f8 94       	cli

00001598 <__stop_program>:
    1598:	ff cf       	rjmp	.-2      	; 0x1598 <__stop_program>
